\begin{Verbatim}[commandchars=\\\{\}]
\PYG{c+cm}{/**}
\PYG{c+cm}{ * @file ComprobarGesto.cpp}
\PYG{c+cm}{ * @author Jesus Zu√±iga Mendez}
\PYG{c+cm}{ * @brief Archivo que permite comprobar cada frame del leap con el guardo en la base de datos, se toma como base el ejemplo dado en el sdk y se le realizan modificaciones}
\PYG{c+cm}{ * @version 1.0}
\PYG{c+cm}{ * @date 18 de julio de 2019}
\PYG{c+cm}{ * @copyright Copyleft (l) 2019}
\PYG{c+cm}{ */}
\PYG{c+cm}{/******************************************************************************\PYGZbs{}}
\PYG{c+cm}{* Copyright (C) 2012\PYGZhy{}2014 Leap Motion, Inc. All rights reserved.               *}
\PYG{c+cm}{* Leap Motion proprietary and confidential. Not for distribution.              *}
\PYG{c+cm}{* Use subject to the terms of the Leap Motion SDK Agreement available at       *}
\PYG{c+cm}{* https://developer.leapmotion.com/sdk\PYGZus{}agreement, or another agreement         *}
\PYG{c+cm}{* between Leap Motion and you, your company or other organization.             *}
\PYG{c+cm}{\PYGZbs{}******************************************************************************/}

\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}iostream\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}cstring\PYGZgt{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZdq{}./include/Leap.h\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}include} \PYG{c+cpf}{\PYGZlt{}fstream\PYGZgt{}}

\PYG{k}{using} \PYG{k}{namespace} \PYG{n}{Leap}\PYG{p}{;}

\PYG{c+cp}{\PYGZsh{}define ANSI\PYGZus{}COLOR\PYGZus{}RESET   \PYGZdq{}\PYGZbs{}x1b[0m\PYGZdq{}}
\PYG{c+cp}{\PYGZsh{}define ANSI\PYGZus{}COLOR\PYGZus{}RED     \PYGZdq{}\PYGZbs{}x1b[31m\PYGZdq{}}


\PYG{c+cm}{/*@brief Funciones que devuelve el valor de x de la linea string}
\PYG{c+cm}{ *@param dato es la linea que se analiza}
\PYG{c+cm}{ *@return devuelve el valor de x}
\PYG{c+cm}{ */}
\PYG{k+kt}{double} \PYG{n+nf}{devolverX}\PYG{p}{(}\PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{dato}\PYG{p}{)\PYGZob{}}
    \PYG{k+kt}{int} \PYG{n}{contadorParentesis}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{k+kt}{int} \PYG{n}{contadorComas}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{k+kt}{char} \PYG{n}{caracter}\PYG{p}{;}
    \PYG{k+kt}{double} \PYG{n}{numero}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{resultado} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{;}
    \PYG{k}{for} \PYG{p}{(}\PYG{k+kt}{unsigned} \PYG{k+kt}{int} \PYG{n}{i} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;} \PYG{n}{i} \PYG{o}{\PYGZlt{}} \PYG{n}{dato}\PYG{p}{.}\PYG{n}{size}\PYG{p}{();}\PYG{n}{i}\PYG{o}{++}\PYG{p}{)\PYGZob{}}
        \PYG{n}{caracter} \PYG{o}{=} \PYG{n}{dato}\PYG{p}{[}\PYG{n}{i}\PYG{p}{];}
        \PYG{k}{if} \PYG{p}{(}\PYG{n}{caracter} \PYG{o}{==} \PYG{l+s+sc}{\PYGZsq{}(\PYGZsq{}}\PYG{p}{)\PYGZob{}}
            \PYG{n}{contadorParentesis}\PYG{o}{++}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}
        \PYG{k}{if} \PYG{p}{(}\PYG{n}{caracter} \PYG{o}{==} \PYG{l+s+sc}{\PYGZsq{},\PYGZsq{}}\PYG{p}{)\PYGZob{}}
            \PYG{n}{contadorComas}\PYG{o}{++}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}
        \PYG{k}{if} \PYG{p}{((}\PYG{n}{contadorParentesis} \PYG{o}{==} \PYG{l+m+mi}{1}\PYG{p}{)} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{p}{(}\PYG{n}{contadorComas} \PYG{o}{==} \PYG{l+m+mi}{0}\PYG{p}{)} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{p}{(}\PYG{n}{i} \PYG{o}{!=} \PYG{l+m+mi}{0}\PYG{p}{))\PYGZob{}}
            \PYG{n}{resultado} \PYG{o}{=} \PYG{n}{resultado} \PYG{o}{+} \PYG{n}{caracter}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}
    \PYG{p}{\PYGZcb{}}
    \PYG{n}{numero} \PYG{o}{=} \PYG{n}{atof}\PYG{p}{(}\PYG{n}{resultado}\PYG{p}{.}\PYG{n}{c\PYGZus{}str}\PYG{p}{());}
    \PYG{k}{return} \PYG{n}{numero}\PYG{p}{;}

\PYG{p}{\PYGZcb{}}
\PYG{c+cm}{/*@brief Funciones que devuelve el valor de y de la linea string}
\PYG{c+cm}{ *@param dato es la linea que se analiza}
\PYG{c+cm}{ *@return devuelve el valor de y}
\PYG{c+cm}{ */}
\PYG{k+kt}{double} \PYG{n+nf}{devolverY}\PYG{p}{(}\PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{dato}\PYG{p}{)\PYGZob{}}
    \PYG{k+kt}{int} \PYG{n}{contadorParentesis}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{k+kt}{int} \PYG{n}{contadorComas}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{k+kt}{char} \PYG{n}{caracter}\PYG{p}{;}
    \PYG{k+kt}{double} \PYG{n}{numero}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{resultado} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{;}
    \PYG{k+kt}{unsigned} \PYG{k+kt}{int} \PYG{n}{posicionComa} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{k}{for} \PYG{p}{(}\PYG{k+kt}{unsigned} \PYG{k+kt}{int} \PYG{n}{i} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;} \PYG{n}{i} \PYG{o}{\PYGZlt{}} \PYG{n}{dato}\PYG{p}{.}\PYG{n}{size}\PYG{p}{();}\PYG{n}{i}\PYG{o}{++}\PYG{p}{)\PYGZob{}}
        \PYG{n}{caracter} \PYG{o}{=} \PYG{n}{dato}\PYG{p}{[}\PYG{n}{i}\PYG{p}{];}
        \PYG{k}{if} \PYG{p}{(}\PYG{n}{caracter} \PYG{o}{==} \PYG{l+s+sc}{\PYGZsq{}(\PYGZsq{}}\PYG{p}{)\PYGZob{}}
            \PYG{n}{contadorParentesis}\PYG{o}{++}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}
        \PYG{k}{if} \PYG{p}{(}\PYG{n}{caracter} \PYG{o}{==} \PYG{l+s+sc}{\PYGZsq{},\PYGZsq{}}\PYG{p}{)\PYGZob{}}
            \PYG{n}{posicionComa} \PYG{o}{=} \PYG{n}{i}\PYG{p}{;}
            \PYG{n}{contadorComas}\PYG{o}{++}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}
        \PYG{k}{if} \PYG{p}{((}\PYG{n}{contadorParentesis} \PYG{o}{==} \PYG{l+m+mi}{1}\PYG{p}{)} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{p}{(}\PYG{n}{contadorComas} \PYG{o}{==} \PYG{l+m+mi}{1}\PYG{p}{)} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{p}{(}\PYG{n}{i} \PYG{o}{!=} \PYG{n}{posicionComa}\PYG{p}{))\PYGZob{}}
            \PYG{n}{resultado} \PYG{o}{=} \PYG{n}{resultado} \PYG{o}{+} \PYG{n}{caracter}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}
    \PYG{p}{\PYGZcb{}}
    \PYG{n}{numero} \PYG{o}{=} \PYG{n}{atof}\PYG{p}{(}\PYG{n}{resultado}\PYG{p}{.}\PYG{n}{c\PYGZus{}str}\PYG{p}{());}
    \PYG{k}{return} \PYG{n}{numero}\PYG{p}{;}

\PYG{p}{\PYGZcb{}}
\PYG{c+cm}{/*@brief Funciones que devuelve el valor de z de la linea string}
\PYG{c+cm}{ *@param dato es la linea que se analiza}
\PYG{c+cm}{ *@return devuelve el valor de z}
\PYG{c+cm}{ */}
\PYG{k+kt}{double} \PYG{n+nf}{devolverZ}\PYG{p}{(}\PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{dato}\PYG{p}{)\PYGZob{}}
    \PYG{k+kt}{int} \PYG{n}{contadorParentesis}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{k+kt}{int} \PYG{n}{contadorComas}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{k+kt}{char} \PYG{n}{caracter}\PYG{p}{;}
    \PYG{k+kt}{float} \PYG{n}{numero}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{resultado} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{;}
    \PYG{k+kt}{unsigned} \PYG{k+kt}{int} \PYG{n}{posicionComa} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{k}{for} \PYG{p}{(}\PYG{k+kt}{unsigned} \PYG{k+kt}{int} \PYG{n}{i} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;} \PYG{n}{i} \PYG{o}{\PYGZlt{}} \PYG{n}{dato}\PYG{p}{.}\PYG{n}{size}\PYG{p}{();}\PYG{n}{i}\PYG{o}{++}\PYG{p}{)\PYGZob{}}
        \PYG{n}{caracter} \PYG{o}{=} \PYG{n}{dato}\PYG{p}{[}\PYG{n}{i}\PYG{p}{];}
        \PYG{k}{if} \PYG{p}{(}\PYG{n}{caracter} \PYG{o}{==} \PYG{l+s+sc}{\PYGZsq{}(\PYGZsq{}}\PYG{p}{)\PYGZob{}}
            \PYG{n}{contadorParentesis}\PYG{o}{++}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}
        \PYG{k}{if} \PYG{p}{(}\PYG{n}{caracter} \PYG{o}{==} \PYG{l+s+sc}{\PYGZsq{})\PYGZsq{}}\PYG{p}{)\PYGZob{}}
            \PYG{n}{contadorParentesis}\PYG{o}{++}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}
        \PYG{k}{if} \PYG{p}{(}\PYG{n}{caracter} \PYG{o}{==} \PYG{l+s+sc}{\PYGZsq{},\PYGZsq{}}\PYG{p}{)\PYGZob{}}
            \PYG{n}{posicionComa} \PYG{o}{=} \PYG{n}{i}\PYG{p}{;}
            \PYG{n}{contadorComas}\PYG{o}{++}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}
        \PYG{k}{if} \PYG{p}{((}\PYG{n}{contadorParentesis} \PYG{o}{==} \PYG{l+m+mi}{1}\PYG{p}{)} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{p}{(}\PYG{n}{contadorComas} \PYG{o}{==} \PYG{l+m+mi}{2}\PYG{p}{)} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{p}{(}\PYG{n}{i} \PYG{o}{!=} \PYG{n}{posicionComa}\PYG{p}{))\PYGZob{}}
            \PYG{n}{resultado} \PYG{o}{=} \PYG{n}{resultado} \PYG{o}{+} \PYG{n}{caracter}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}
    \PYG{p}{\PYGZcb{}}
    \PYG{n}{numero} \PYG{o}{=} \PYG{n}{atof}\PYG{p}{(}\PYG{n}{resultado}\PYG{p}{.}\PYG{n}{c\PYGZus{}str}\PYG{p}{());}
    \PYG{k}{return} \PYG{n}{numero}\PYG{p}{;}

\PYG{p}{\PYGZcb{}}


\PYG{c+cm}{/*@brief Funciones que cuenta las lineas de un archivo}
\PYG{c+cm}{ *@param ruta es la direccion del arcivo}
\PYG{c+cm}{ *@return devuelve el numero de lineas}
\PYG{c+cm}{ */}
\PYG{k+kt}{int} \PYG{n+nf}{ContarLineas}\PYG{p}{(}\PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{ruta}\PYG{p}{)\PYGZob{}}
    \PYG{n}{std}\PYG{o}{::}\PYG{n}{ifstream} \PYG{n}{archivo}\PYG{p}{;}
    \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{linea}\PYG{p}{;}
    \PYG{k+kt}{int} \PYG{n}{contador} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{n}{archivo}\PYG{p}{.}\PYG{n}{open}\PYG{p}{(}\PYG{n}{ruta}\PYG{p}{.}\PYG{n}{c\PYGZus{}str}\PYG{p}{(),}\PYG{n}{std}\PYG{o}{::}\PYG{n}{ios}\PYG{o}{::}\PYG{n}{in}\PYG{p}{);} \PYG{c+c1}{//abriendo archivo modo lectura}

    \PYG{k}{if} \PYG{p}{(}\PYG{n}{archivo}\PYG{p}{.}\PYG{n}{fail}\PYG{p}{())\PYGZob{}}
        \PYG{n}{std}\PYG{o}{::}\PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}No se pudo abrir el archivo \PYGZdq{}}  \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{ruta} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{} contarLineas \PYGZdq{}} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{std}\PYG{o}{::}\PYG{n}{endl}\PYG{p}{;}
        \PYG{n}{exit}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}

    \PYG{k}{while} \PYG{p}{(}\PYG{o}{!}\PYG{n}{archivo}\PYG{p}{.}\PYG{n}{eof}\PYG{p}{())\PYGZob{}}
      \PYG{n}{std}\PYG{o}{::}\PYG{n}{getline}\PYG{p}{(}\PYG{n}{archivo}\PYG{p}{,}\PYG{n}{linea}\PYG{p}{);}
      \PYG{k}{if} \PYG{p}{(}\PYG{n}{strcmp}\PYG{p}{(}\PYG{n}{linea}\PYG{p}{.}\PYG{n}{c\PYGZus{}str}\PYG{p}{(),}\PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{)}\PYG{o}{!=} \PYG{l+m+mi}{0}\PYG{p}{)\PYGZob{}}
        \PYG{n}{contador}\PYG{o}{++}\PYG{p}{;}
      \PYG{p}{\PYGZcb{}}
    \PYG{p}{\PYGZcb{}}

    \PYG{n}{archivo}\PYG{p}{.}\PYG{n}{close}\PYG{p}{();}
    \PYG{k}{return} \PYG{n}{contador}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}


\PYG{c+cm}{/*}
\PYG{c+cm}{ *@brief esta funcion devuelve la primera linea de un archivo}
\PYG{c+cm}{ *@param ruta es la direccion del arcivo}
\PYG{c+cm}{ *@return devuelve la primera linea}
\PYG{c+cm}{ */}
\PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{DevolverPrimeraLinea}\PYG{p}{(}\PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{ruta}\PYG{p}{)\PYGZob{}}
  \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{linea}\PYG{p}{;}
  \PYG{n}{std}\PYG{o}{::}\PYG{n}{ifstream} \PYG{n}{Archivo}\PYG{p}{;}
  \PYG{n}{Archivo}\PYG{p}{.}\PYG{n}{open}\PYG{p}{(}\PYG{n}{ruta}\PYG{p}{.}\PYG{n}{c\PYGZus{}str}\PYG{p}{(),}\PYG{n}{std}\PYG{o}{::}\PYG{n}{ios}\PYG{o}{::}\PYG{n}{in}\PYG{p}{);} \PYG{c+c1}{//abriendo archivo modo lectura}
  \PYG{k}{if} \PYG{p}{(}\PYG{n}{Archivo}\PYG{p}{.}\PYG{n}{fail}\PYG{p}{())\PYGZob{}}
      \PYG{n}{std}\PYG{o}{::}\PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}No se pudo abrir el archivo\PYGZdq{}} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{ruta} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{std}\PYG{o}{::}\PYG{n}{endl}\PYG{p}{;}
      \PYG{n}{exit}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{);}
  \PYG{p}{\PYGZcb{}}
  \PYG{n}{std}\PYG{o}{::}\PYG{n}{getline}\PYG{p}{(}\PYG{n}{Archivo}\PYG{p}{,} \PYG{n}{linea}\PYG{p}{);}
  \PYG{n}{Archivo}\PYG{p}{.}\PYG{n}{close}\PYG{p}{();}
  \PYG{k}{return} \PYG{n}{linea}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}
\PYG{c+cm}{/*}
\PYG{c+cm}{ *@brief esta funcion devuelve la linea desea por el usuario}
\PYG{c+cm}{ *@param ruta es la direccion del arcivo}
\PYG{c+cm}{ *@param numeroLinea es la linea deseada}
\PYG{c+cm}{ *@return devuelve la linea correspondiente}
\PYG{c+cm}{ */}
\PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{DevolverQuieroLinea}\PYG{p}{(}\PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{ruta}\PYG{p}{,} \PYG{k+kt}{int} \PYG{n}{numeroLinea}\PYG{p}{)\PYGZob{}}
  \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{linea}\PYG{p}{;}
  \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{devolver}\PYG{p}{;}
  \PYG{k+kt}{int} \PYG{n}{contador} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
  \PYG{n}{std}\PYG{o}{::}\PYG{n}{ifstream} \PYG{n}{Archivo}\PYG{p}{;}
  \PYG{n}{Archivo}\PYG{p}{.}\PYG{n}{open}\PYG{p}{(}\PYG{n}{ruta}\PYG{p}{.}\PYG{n}{c\PYGZus{}str}\PYG{p}{(),}\PYG{n}{std}\PYG{o}{::}\PYG{n}{ios}\PYG{o}{::}\PYG{n}{in}\PYG{p}{);} \PYG{c+c1}{//abriendo archivo modo lectura}
  \PYG{k}{if} \PYG{p}{(}\PYG{n}{Archivo}\PYG{p}{.}\PYG{n}{fail}\PYG{p}{())\PYGZob{}}
      \PYG{n}{std}\PYG{o}{::}\PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}No se pudo abrir el archivo\PYGZdq{}} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{ruta} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{std}\PYG{o}{::}\PYG{n}{endl}\PYG{p}{;}
      \PYG{n}{exit}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{);}
  \PYG{p}{\PYGZcb{}}
  \PYG{k}{while} \PYG{p}{(}\PYG{o}{!}\PYG{n}{Archivo}\PYG{p}{.}\PYG{n}{eof}\PYG{p}{())\PYGZob{}}
    \PYG{n}{std}\PYG{o}{::}\PYG{n}{getline}\PYG{p}{(}\PYG{n}{Archivo}\PYG{p}{,}\PYG{n}{linea}\PYG{p}{);}
    \PYG{n}{contador}\PYG{o}{++}\PYG{p}{;}
    \PYG{k}{if} \PYG{p}{(}\PYG{n}{contador}\PYG{o}{==}\PYG{n}{numeroLinea}\PYG{p}{)\PYGZob{}}
      \PYG{n}{devolver} \PYG{o}{=} \PYG{n}{linea}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}
  \PYG{p}{\PYGZcb{}}
  \PYG{n}{Archivo}\PYG{p}{.}\PYG{n}{close}\PYG{p}{();}
  \PYG{k}{return} \PYG{n}{devolver}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}



\PYG{c+cm}{/*}
\PYG{c+cm}{ *@brief Funcion que devuelve el porcentaje de error de dos datos}
\PYG{c+cm}{ *@param Teorico es el dato exacto}
\PYG{c+cm}{ *@param Experimental es el dato medido}
\PYG{c+cm}{ *@return devuielve el porcentaje de error}
\PYG{c+cm}{ */}
\PYG{k+kt}{double} \PYG{n}{CalcularPorcentaje}\PYG{p}{(}\PYG{k+kt}{double} \PYG{n}{Teorico}\PYG{p}{,} \PYG{k+kt}{double} \PYG{n}{Experimental}\PYG{p}{)\PYGZob{}}
  \PYG{k+kt}{double} \PYG{n}{porcentaje} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
  \PYG{k+kt}{double} \PYG{n}{absoluto} \PYG{o}{=} \PYG{n}{Experimental} \PYG{o}{\PYGZhy{}} \PYG{n}{Teorico}\PYG{p}{;}
  \PYG{k}{if} \PYG{p}{(}\PYG{n}{absoluto} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{0}\PYG{p}{)\PYGZob{}}
    \PYG{n}{absoluto} \PYG{o}{=} \PYG{n}{absoluto} \PYG{o}{*} \PYG{o}{\PYGZhy{}}\PYG{l+m+mf}{1.0}\PYG{p}{;}
  \PYG{p}{\PYGZcb{}}
  \PYG{k}{if} \PYG{p}{(}\PYG{n}{Teorico} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{0} \PYG{p}{)\PYGZob{}}
    \PYG{n}{Teorico} \PYG{o}{=} \PYG{n}{Teorico} \PYG{o}{*} \PYG{o}{\PYGZhy{}}\PYG{l+m+mf}{1.0}\PYG{p}{;}
  \PYG{p}{\PYGZcb{}}
  \PYG{k}{if} \PYG{p}{(}\PYG{n}{Teorico} \PYG{o}{!=} \PYG{l+m+mi}{0}\PYG{p}{)\PYGZob{}}
    \PYG{n}{porcentaje} \PYG{o}{=} \PYG{p}{(}\PYG{n}{absoluto}\PYG{o}{/}\PYG{n}{Teorico}\PYG{p}{)} \PYG{o}{*} \PYG{l+m+mi}{100} \PYG{p}{;}
  \PYG{p}{\PYGZcb{}}

  \PYG{k}{return} \PYG{n}{porcentaje}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{c+cm}{/*}
\PYG{c+cm}{ *@brief Funcion que devuelve el promedio del porcentaje de error de las coordenadas de un vector}
\PYG{c+cm}{ *@param vectorTeorico es el dato exacto}
\PYG{c+cm}{ *@param vectorExperimental es el dato medido}
\PYG{c+cm}{ *@return devuielve el porcentaje de error}
\PYG{c+cm}{ */}
\PYG{k+kt}{double} \PYG{n}{PorcentajeError}\PYG{p}{(}\PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{vectorTeorico}\PYG{p}{,} \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{vectorExperimental}\PYG{p}{)\PYGZob{}}
  \PYG{k+kt}{double} \PYG{n}{porcentajeFinal} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
  \PYG{k+kt}{double} \PYG{n}{porcentajeX} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
  \PYG{k+kt}{double} \PYG{n}{porcentajeY} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
  \PYG{k+kt}{double} \PYG{n}{porcentajeZ}\PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
  \PYG{k+kt}{double} \PYG{n}{xTeorico} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
  \PYG{k+kt}{double} \PYG{n}{xExperimental} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
  \PYG{k+kt}{double} \PYG{n}{yTeorico} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
  \PYG{k+kt}{double} \PYG{n}{yExperimental} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
  \PYG{k+kt}{double} \PYG{n}{zTeorico} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
  \PYG{k+kt}{double} \PYG{n}{zExperimental} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
  \PYG{n}{xTeorico} \PYG{o}{=} \PYG{n}{devolverX}\PYG{p}{(}\PYG{n}{vectorTeorico}\PYG{p}{);}
  \PYG{n}{yTeorico} \PYG{o}{=} \PYG{n}{devolverY}\PYG{p}{(}\PYG{n}{vectorTeorico}\PYG{p}{);}
  \PYG{n}{zTeorico} \PYG{o}{=} \PYG{n}{devolverZ}\PYG{p}{(}\PYG{n}{vectorTeorico}\PYG{p}{);}
  \PYG{n}{xExperimental} \PYG{o}{=} \PYG{n}{devolverX}\PYG{p}{(}\PYG{n}{vectorExperimental}\PYG{p}{);}
  \PYG{n}{yExperimental} \PYG{o}{=} \PYG{n}{devolverY}\PYG{p}{(}\PYG{n}{vectorExperimental}\PYG{p}{);}
  \PYG{n}{zExperimental} \PYG{o}{=} \PYG{n}{devolverZ}\PYG{p}{(}\PYG{n}{vectorExperimental}\PYG{p}{);}
  \PYG{n}{porcentajeX} \PYG{o}{=} \PYG{n}{CalcularPorcentaje}\PYG{p}{(}\PYG{n}{xTeorico}\PYG{p}{,}\PYG{n}{xExperimental}\PYG{p}{);}
  \PYG{n}{porcentajeY} \PYG{o}{=} \PYG{n}{CalcularPorcentaje}\PYG{p}{(}\PYG{n}{yTeorico}\PYG{p}{,}\PYG{n}{yExperimental}\PYG{p}{);}
  \PYG{n}{porcentajeZ} \PYG{o}{=} \PYG{n}{CalcularPorcentaje}\PYG{p}{(}\PYG{n}{zTeorico}\PYG{p}{,}\PYG{n}{zExperimental}\PYG{p}{);}
  \PYG{n}{std}\PYG{o}{::}\PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}PX \PYGZdq{}} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{porcentajeX} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}PY \PYGZdq{}} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{porcentajeY} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}PZ \PYGZdq{}} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{porcentajeZ} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{std}\PYG{o}{::}\PYG{n}{endl}\PYG{p}{;}
  \PYG{n}{porcentajeFinal} \PYG{o}{=} \PYG{n}{porcentajeX} \PYG{o}{+} \PYG{n}{porcentajeY} \PYG{o}{+} \PYG{n}{porcentajeZ}\PYG{p}{;}
  \PYG{n}{porcentajeFinal} \PYG{o}{=} \PYG{n}{porcentajeFinal} \PYG{o}{/} \PYG{l+m+mi}{3}\PYG{p}{;}
  \PYG{k}{return} \PYG{n}{porcentajeFinal}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}

\PYG{c+cm}{/*}
\PYG{c+cm}{ *@brief Funcion que devuelve la diferencia entre dos vectores}
\PYG{c+cm}{ *@param vectorTeorico es el dato guardado en el gesto}
\PYG{c+cm}{ *@param vectorExperimental es el dato medido por el leap}
\PYG{c+cm}{ *@return devuielve el valor absoluto de la diferencia}
\PYG{c+cm}{ */}
\PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{CompararVectores}\PYG{p}{(}\PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{vectorTeorico}\PYG{p}{,} \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{vectorExperimental}\PYG{p}{)\PYGZob{}}
  \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{vectorResultado}\PYG{p}{;}
  \PYG{k+kt}{double} \PYG{n}{resultadoX} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
  \PYG{k+kt}{double} \PYG{n}{resultadoY} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
  \PYG{k+kt}{double} \PYG{n}{resultadoZ}\PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
  \PYG{k+kt}{double} \PYG{n}{xTeorico} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
  \PYG{k+kt}{double} \PYG{n}{xExperimental} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
  \PYG{k+kt}{double} \PYG{n}{yTeorico} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
  \PYG{k+kt}{double} \PYG{n}{yExperimental} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
  \PYG{k+kt}{double} \PYG{n}{zTeorico} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
  \PYG{k+kt}{double} \PYG{n}{zExperimental} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
  \PYG{n}{xTeorico} \PYG{o}{=} \PYG{n}{devolverX}\PYG{p}{(}\PYG{n}{vectorTeorico}\PYG{p}{);}
  \PYG{n}{yTeorico} \PYG{o}{=} \PYG{n}{devolverY}\PYG{p}{(}\PYG{n}{vectorTeorico}\PYG{p}{);}
  \PYG{n}{zTeorico} \PYG{o}{=} \PYG{n}{devolverZ}\PYG{p}{(}\PYG{n}{vectorTeorico}\PYG{p}{);}
  \PYG{n}{xExperimental} \PYG{o}{=} \PYG{n}{devolverX}\PYG{p}{(}\PYG{n}{vectorExperimental}\PYG{p}{);}
  \PYG{n}{yExperimental} \PYG{o}{=} \PYG{n}{devolverY}\PYG{p}{(}\PYG{n}{vectorExperimental}\PYG{p}{);}
  \PYG{n}{zExperimental} \PYG{o}{=} \PYG{n}{devolverZ}\PYG{p}{(}\PYG{n}{vectorExperimental}\PYG{p}{);}
  \PYG{n}{resultadoX} \PYG{o}{=} \PYG{n}{xTeorico} \PYG{o}{\PYGZhy{}} \PYG{n}{xExperimental}\PYG{p}{;}
  \PYG{n}{resultadoY} \PYG{o}{=} \PYG{n}{yTeorico} \PYG{o}{\PYGZhy{}} \PYG{n}{yExperimental}\PYG{p}{;}
  \PYG{n}{resultadoZ} \PYG{o}{=} \PYG{n}{zTeorico} \PYG{o}{\PYGZhy{}} \PYG{n}{zExperimental}\PYG{p}{;}
  \PYG{k}{if} \PYG{p}{(}\PYG{n}{resultadoX} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{0}\PYG{p}{)\PYGZob{}}
    \PYG{n}{resultadoX} \PYG{o}{=} \PYG{n}{resultadoX} \PYG{o}{*} \PYG{o}{\PYGZhy{}}\PYG{l+m+mf}{1.0}\PYG{p}{;}
  \PYG{p}{\PYGZcb{}}
  \PYG{k}{if} \PYG{p}{(}\PYG{n}{resultadoY} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{0}\PYG{p}{)\PYGZob{}}
    \PYG{n}{resultadoY} \PYG{o}{=} \PYG{n}{resultadoY} \PYG{o}{*} \PYG{o}{\PYGZhy{}}\PYG{l+m+mf}{1.0}\PYG{p}{;}
  \PYG{p}{\PYGZcb{}}
  \PYG{k}{if} \PYG{p}{(}\PYG{n}{resultadoZ} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{0}\PYG{p}{)\PYGZob{}}
    \PYG{n}{resultadoZ} \PYG{o}{=} \PYG{n}{resultadoZ} \PYG{o}{*} \PYG{o}{\PYGZhy{}}\PYG{l+m+mf}{1.0}\PYG{p}{;}
  \PYG{p}{\PYGZcb{}}
  \PYG{n}{vectorResultado} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}(\PYGZdq{}}\PYG{o}{+}\PYG{n}{std}\PYG{o}{::}\PYG{n}{to\PYGZus{}string}\PYG{p}{(}\PYG{n}{resultadoX}\PYG{p}{)}\PYG{o}{+}\PYG{l+s}{\PYGZdq{}, \PYGZdq{}}\PYG{o}{+}\PYG{n}{std}\PYG{o}{::}\PYG{n}{to\PYGZus{}string}\PYG{p}{(}\PYG{n}{resultadoY}\PYG{p}{)}\PYG{o}{+}\PYG{l+s}{\PYGZdq{}, \PYGZdq{}}\PYG{o}{+}\PYG{n}{std}\PYG{o}{::}\PYG{n}{to\PYGZus{}string}\PYG{p}{(}\PYG{n}{resultadoZ}\PYG{p}{)}\PYG{o}{+}\PYG{l+s}{\PYGZdq{})\PYGZdq{}}\PYG{p}{;}
  \PYG{k}{return} \PYG{n}{vectorResultado}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}





\PYG{c+cm}{/*}
\PYG{c+cm}{ *@brief esta funcion se encarga de comparar el gesto de cada frame con la base de datos de gestos}
\PYG{c+cm}{ *@return devuelve el gesto encontrado}
\PYG{c+cm}{ */}
\PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{ComprobarActual}\PYG{p}{()\PYGZob{}}
  \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{gestoRespuesta} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{;}
  \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{linea}\PYG{p}{;}
  \PYG{c+c1}{//llenamos la variable con numero de manos del frame actual}
  \PYG{k+kt}{int} \PYG{n}{manos} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
  \PYG{n}{std}\PYG{o}{::}\PYG{n}{ifstream} \PYG{n}{Manos}\PYG{p}{;}
  \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{ruta}\PYG{o}{=} \PYG{l+s}{\PYGZdq{}./resources/temp/CtdManos\PYGZdq{}}\PYG{p}{;}
  \PYG{n}{Manos}\PYG{p}{.}\PYG{n}{open}\PYG{p}{(}\PYG{n}{ruta}\PYG{p}{.}\PYG{n}{c\PYGZus{}str}\PYG{p}{(),}\PYG{n}{std}\PYG{o}{::}\PYG{n}{ios}\PYG{o}{::}\PYG{n}{in}\PYG{p}{);} \PYG{c+c1}{//abriendo archivo modo lectura}
  \PYG{k}{if} \PYG{p}{(}\PYG{n}{Manos}\PYG{p}{.}\PYG{n}{fail}\PYG{p}{())\PYGZob{}}
      \PYG{n}{std}\PYG{o}{::}\PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}No se pudo abrir el archivo CtdManos \PYGZdq{}} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{std}\PYG{o}{::}\PYG{n}{endl}\PYG{p}{;}
      \PYG{n}{exit}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{);}
  \PYG{p}{\PYGZcb{}}
  \PYG{n}{std}\PYG{o}{::}\PYG{n}{getline}\PYG{p}{(}\PYG{n}{Manos}\PYG{p}{,} \PYG{n}{linea}\PYG{p}{);}
  \PYG{n}{manos} \PYG{o}{=} \PYG{n}{atoi}\PYG{p}{(}\PYG{n}{linea}\PYG{p}{.}\PYG{n}{c\PYGZus{}str}\PYG{p}{());}
  \PYG{n}{Manos}\PYG{p}{.}\PYG{n}{close}\PYG{p}{();}
  \PYG{c+c1}{//terminamos de llenar manos del frame actual}
\PYG{c+c1}{//  std::cout \PYGZlt{}\PYGZlt{} \PYGZdq{}las manos del frame son \PYGZdq{} \PYGZlt{}\PYGZlt{} manos \PYGZlt{}\PYGZlt{} std::endl;}
  \PYG{c+c1}{//\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}
  \PYG{c+c1}{//llenamos la variable con numero de dedos del frame actual}
  \PYG{k+kt}{int} \PYG{n}{dedos} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
  \PYG{n}{std}\PYG{o}{::}\PYG{n}{ifstream} \PYG{n}{Dedos}\PYG{p}{;}
  \PYG{n}{ruta}\PYG{o}{=} \PYG{l+s}{\PYGZdq{}./resources/temp/CtdDedos\PYGZdq{}}\PYG{p}{;}
  \PYG{n}{Dedos}\PYG{p}{.}\PYG{n}{open}\PYG{p}{(}\PYG{n}{ruta}\PYG{p}{.}\PYG{n}{c\PYGZus{}str}\PYG{p}{(),}\PYG{n}{std}\PYG{o}{::}\PYG{n}{ios}\PYG{o}{::}\PYG{n}{in}\PYG{p}{);} \PYG{c+c1}{//abriendo archivo modo lectura}
  \PYG{k}{if} \PYG{p}{(}\PYG{n}{Dedos}\PYG{p}{.}\PYG{n}{fail}\PYG{p}{())\PYGZob{}}
      \PYG{n}{std}\PYG{o}{::}\PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}No se pudo abrir el archivo CtdDedos \PYGZdq{}} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{std}\PYG{o}{::}\PYG{n}{endl}\PYG{p}{;}
      \PYG{n}{exit}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{);}
  \PYG{p}{\PYGZcb{}}
  \PYG{n}{std}\PYG{o}{::}\PYG{n}{getline}\PYG{p}{(}\PYG{n}{Dedos}\PYG{p}{,} \PYG{n}{linea}\PYG{p}{);}
  \PYG{n}{dedos} \PYG{o}{=} \PYG{n}{atoi}\PYG{p}{(}\PYG{n}{linea}\PYG{p}{.}\PYG{n}{c\PYGZus{}str}\PYG{p}{());}
  \PYG{n}{Dedos}\PYG{p}{.}\PYG{n}{close}\PYG{p}{();}
  \PYG{c+c1}{//terminamos de llenar dedos del frame actual}
\PYG{c+c1}{//  std::cout \PYGZlt{}\PYGZlt{} \PYGZdq{}los dedos del frame son \PYGZdq{} \PYGZlt{}\PYGZlt{} dedos \PYGZlt{}\PYGZlt{} std::endl;}
  \PYG{c+c1}{//\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}
  \PYG{c+c1}{//vamos a abrir todos los archivos de gestos guardados para comprobar cuales tienen la misma }
  \PYG{c+c1}{//cantidad de manos y la misma cantidad de dedos}
  \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{rutaGesto} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}./resources/gestos/\PYGZdq{}}\PYG{p}{;}
  \PYG{n}{std}\PYG{o}{::}\PYG{n}{ifstream} \PYG{n}{Registro}\PYG{p}{;}
  \PYG{n}{ruta}\PYG{o}{=} \PYG{l+s}{\PYGZdq{}./resources/gestos/RegistroGestos\PYGZdq{}}\PYG{p}{;}
  \PYG{n}{Registro}\PYG{p}{.}\PYG{n}{open}\PYG{p}{(}\PYG{n}{ruta}\PYG{p}{.}\PYG{n}{c\PYGZus{}str}\PYG{p}{(),}\PYG{n}{std}\PYG{o}{::}\PYG{n}{ios}\PYG{o}{::}\PYG{n}{in}\PYG{p}{);} \PYG{c+c1}{//abriendo archivo modo lectura}
  \PYG{k}{if} \PYG{p}{(}\PYG{n}{Dedos}\PYG{p}{.}\PYG{n}{fail}\PYG{p}{())\PYGZob{}}
      \PYG{n}{std}\PYG{o}{::}\PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}No se pudo abrir el archivo CtdDedos \PYGZdq{}} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{std}\PYG{o}{::}\PYG{n}{endl}\PYG{p}{;}
      \PYG{n}{exit}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{);}
  \PYG{p}{\PYGZcb{}}

  \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{lineaGesto}\PYG{p}{;}
  \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{lineaFrame}\PYG{p}{;}
  \PYG{k+kt}{double} \PYG{n}{arregloGesto}\PYG{p}{[}\PYG{l+m+mi}{3}\PYG{p}{]} \PYG{o}{=} \PYG{p}{\PYGZob{}}\PYG{l+m+mf}{50.0}\PYG{p}{,}\PYG{l+m+mf}{50.0}\PYG{p}{,}\PYG{l+m+mf}{50.0}\PYG{p}{\PYGZcb{};}
  \PYG{k+kt}{int} \PYG{n}{manosGesto}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;}
  \PYG{k+kt}{int} \PYG{n}{dedosGesto}\PYG{o}{=}\PYG{l+m+mi}{0}\PYG{p}{;}
  \PYG{k+kt}{int} \PYG{n}{lineasArchivoGestos} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
  \PYG{k+kt}{int} \PYG{n}{lineasFrame} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
  \PYG{c+c1}{//se recorre toda la lista del legistro}
  \PYG{k}{while} \PYG{p}{(}\PYG{o}{!}\PYG{n}{Registro}\PYG{p}{.}\PYG{n}{eof}\PYG{p}{())\PYGZob{}}
    \PYG{n}{rutaGesto} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}./resources/gestos/\PYGZdq{}}\PYG{p}{;}
    \PYG{n}{std}\PYG{o}{::}\PYG{n}{getline}\PYG{p}{(}\PYG{n}{Registro}\PYG{p}{,}\PYG{n}{linea}\PYG{p}{);}
    \PYG{c+c1}{//si la linea no esvacia}
    \PYG{k}{if} \PYG{p}{(}\PYG{n}{strcmp}\PYG{p}{(}\PYG{n}{linea}\PYG{p}{.}\PYG{n}{c\PYGZus{}str}\PYG{p}{()} \PYG{p}{,} \PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{)} \PYG{o}{!=} \PYG{l+m+mi}{0}\PYG{p}{)\PYGZob{}}
      \PYG{n}{rutaGesto} \PYG{o}{=} \PYG{n}{rutaGesto} \PYG{o}{+} \PYG{n}{linea}\PYG{p}{;}
      \PYG{n}{manosGesto} \PYG{o}{=} \PYG{n}{atoi}\PYG{p}{(}\PYG{n}{DevolverPrimeraLinea}\PYG{p}{(}\PYG{n}{rutaGesto}\PYG{o}{+}\PYG{l+s}{\PYGZdq{}/CtdManos\PYGZdq{}}\PYG{p}{).}\PYG{n}{c\PYGZus{}str}\PYG{p}{());}
      \PYG{n}{dedosGesto} \PYG{o}{=} \PYG{n}{atoi}\PYG{p}{(}\PYG{n}{DevolverPrimeraLinea}\PYG{p}{(}\PYG{n}{rutaGesto}\PYG{o}{+}\PYG{l+s}{\PYGZdq{}/CtdDedos\PYGZdq{}}\PYG{p}{).}\PYG{n}{c\PYGZus{}str}\PYG{p}{());}
\PYG{c+c1}{//      std::cout \PYGZlt{}\PYGZlt{} \PYGZdq{}las manos del gesto \PYGZdq{}\PYGZlt{}\PYGZlt{}linea \PYGZlt{}\PYGZlt{} \PYGZdq{}son\PYGZdq{} \PYGZlt{}\PYGZlt{} manosGesto \PYGZlt{}\PYGZlt{} std::endl;}
\PYG{c+c1}{//      std::cout \PYGZlt{}\PYGZlt{} \PYGZdq{}las dedos del gesto \PYGZdq{}\PYGZlt{}\PYGZlt{}linea \PYGZlt{}\PYGZlt{} \PYGZdq{}son\PYGZdq{} \PYGZlt{}\PYGZlt{} dedosGesto \PYGZlt{}\PYGZlt{} std::endl;}
      \PYG{c+c1}{//si la cantidad de dedos y manos es la misma}
      \PYG{k}{if} \PYG{p}{((}\PYG{n}{dedos} \PYG{o}{==} \PYG{n}{dedosGesto}\PYG{p}{)} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{p}{(}\PYG{n}{manos} \PYG{o}{==} \PYG{n}{manosGesto}\PYG{p}{))\PYGZob{}}
        \PYG{c+c1}{//si pasa este filtro se comprueban los datos almacenados en lista de archivos}
        \PYG{c+c1}{//es decir la direccion en angulos en cada uno de los carchivos de texto plano}
        \PYG{c+c1}{//haciendo uso de ListaArchivos}
        \PYG{n}{lineaGesto} \PYG{o}{=} \PYG{n}{DevolverPrimeraLinea}\PYG{p}{(}\PYG{n}{rutaGesto}\PYG{o}{+}\PYG{l+s}{\PYGZdq{}/ListaArchivos\PYGZdq{}}\PYG{p}{);}
        \PYG{n}{lineaFrame} \PYG{o}{=} \PYG{n}{DevolverPrimeraLinea}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}./resources/temp/ListaArchivos\PYGZdq{}}\PYG{p}{);}
\PYG{c+c1}{//        std::cout\PYGZlt{}\PYGZlt{}\PYGZdq{}linea del Frame\PYGZdq{} \PYGZlt{}\PYGZlt{} lineaFrame \PYGZlt{}\PYGZlt{} std::endl;}
\PYG{c+c1}{//        std::cout\PYGZlt{}\PYGZlt{}\PYGZdq{}linea del Gesto\PYGZdq{} \PYGZlt{}\PYGZlt{} lineaGesto \PYGZlt{}\PYGZlt{} std::endl;}
        \PYG{k}{if} \PYG{p}{(}\PYG{n}{strcmp}\PYG{p}{(}\PYG{n}{lineaFrame}\PYG{p}{.}\PYG{n}{c\PYGZus{}str}\PYG{p}{(),}\PYG{n}{lineaGesto}\PYG{p}{.}\PYG{n}{c\PYGZus{}str}\PYG{p}{())} \PYG{o}{==} \PYG{l+m+mi}{0}\PYG{p}{)\PYGZob{}}
          \PYG{c+c1}{//si las listas coinciden se procede a revisar cada uno de los archivos de texto}
          \PYG{c+c1}{//para comprobar si coinciden las direcciones de los gestos almacenados con los gestos}
          \PYG{c+c1}{//de cada frame}
          \PYG{n}{lineasArchivoGestos} \PYG{o}{=} \PYG{n}{ContarLineas}\PYG{p}{(}\PYG{n}{rutaGesto}\PYG{o}{+}\PYG{l+s}{\PYGZdq{}/ListaArchivos\PYGZdq{}}\PYG{p}{);}
          \PYG{n}{lineasFrame} \PYG{o}{=} \PYG{n}{ContarLineas}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}./resources/temp/ListaArchivos\PYGZdq{}}\PYG{p}{);}
          \PYG{c+c1}{//se comprueba que los archivos tengan el mismo tama√±o para evitar errores}
          \PYG{k}{if} \PYG{p}{(}\PYG{n}{lineasArchivoGestos} \PYG{o}{==} \PYG{n}{lineasFrame}\PYG{p}{)\PYGZob{}}
            \PYG{c+c1}{//si todo se cumpple se empieza a recorrer el archivo ListaArchivos}
            \PYG{c+c1}{//de linea en linea para obtener el porcentaje de error entre cada direccion}
            \PYG{c+c1}{//tanto de el gesto guardado que es considerado el valor teorico}
            \PYG{c+c1}{//y el gesto del frame que es considerado el valor experimental}
            \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{vectorGesto}\PYG{p}{;}
            \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{vectorFrame}\PYG{p}{;}
            \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{nombreArchivo}\PYG{p}{;}
            \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{arregloError}\PYG{p}{[}\PYG{n}{lineasFrame}\PYG{p}{];}
            \PYG{c+c1}{//se repite este ciclo hasta que se acaben los archivos que contienen los vectores con direccion}
            \PYG{k}{for} \PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{i} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;} \PYG{n}{i} \PYG{o}{\PYGZlt{}} \PYG{n}{lineasFrame}\PYG{p}{;}\PYG{n}{i}\PYG{o}{++}\PYG{p}{)\PYGZob{}}
              \PYG{n}{nombreArchivo} \PYG{o}{=} \PYG{n}{DevolverQuieroLinea}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}./resources/temp/ListaArchivos\PYGZdq{}}\PYG{p}{,(}\PYG{n}{i}\PYG{o}{+}\PYG{l+m+mi}{1}\PYG{p}{));}
              \PYG{n}{vectorGesto} \PYG{o}{=} \PYG{n}{DevolverPrimeraLinea}\PYG{p}{(}\PYG{n}{rutaGesto}\PYG{o}{+}\PYG{l+s}{\PYGZdq{}/\PYGZdq{}}\PYG{o}{+}\PYG{n}{nombreArchivo}\PYG{p}{);}
              \PYG{n}{vectorFrame} \PYG{o}{=} \PYG{n}{DevolverPrimeraLinea}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}./resources/temp/\PYGZdq{}}\PYG{o}{+}\PYG{n}{nombreArchivo}\PYG{p}{);}
              \PYG{c+c1}{//arregloError[i] = PorcentajeError(vectorGesto,vectorFrame);}
              \PYG{n}{arregloError}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]} \PYG{o}{=} \PYG{n}{CompararVectores}\PYG{p}{(}\PYG{n}{vectorGesto}\PYG{p}{,}\PYG{n}{vectorFrame}\PYG{p}{).}\PYG{n}{c\PYGZus{}str}\PYG{p}{();}
              \PYG{c+c1}{//std::cout \PYGZlt{}\PYGZlt{} linea \PYGZlt{}\PYGZlt{} arregloError[i] \PYGZlt{}\PYGZlt{} std::endl;}
              \PYG{c+c1}{//std::cout \PYGZlt{}\PYGZlt{} linea \PYGZlt{}\PYGZlt{} \PYGZdq{}   \PYGZdq{} \PYGZlt{}\PYGZlt{}nombreArchivo \PYGZlt{}\PYGZlt{} \PYGZdq{}  \PYGZdq{} \PYGZlt{}\PYGZlt{} vectorGesto \PYGZlt{}\PYGZlt{} \PYGZdq{}  \PYGZdq{} \PYGZlt{}\PYGZlt{} vectorFrame \PYGZlt{}\PYGZlt{} \PYGZdq{} \PYGZdq{} \PYGZlt{}\PYGZlt{} arregloError[i] \PYGZlt{}\PYGZlt{} std::endl;}
            \PYG{p}{\PYGZcb{}}
            \PYG{k+kt}{double} \PYG{n}{sumatoriaX} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
            \PYG{k+kt}{double} \PYG{n}{sumatoriaY} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
            \PYG{k+kt}{double} \PYG{n}{sumatoriaZ} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
            \PYG{c+c1}{//se calcula el promedio de los resultados}
            \PYG{k}{for} \PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{i} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;} \PYG{n}{i} \PYG{o}{\PYGZlt{}} \PYG{n}{lineasFrame}\PYG{p}{;} \PYG{n}{i}\PYG{o}{++}\PYG{p}{)\PYGZob{}}
              \PYG{n}{sumatoriaX} \PYG{o}{=} \PYG{n}{sumatoriaX} \PYG{o}{+} \PYG{n}{devolverX}\PYG{p}{(}\PYG{n}{arregloError}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]);}
              \PYG{n}{sumatoriaY} \PYG{o}{=} \PYG{n}{sumatoriaY} \PYG{o}{+} \PYG{n}{devolverY}\PYG{p}{(}\PYG{n}{arregloError}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]);}
              \PYG{n}{sumatoriaZ} \PYG{o}{=} \PYG{n}{sumatoriaZ} \PYG{o}{+} \PYG{n}{devolverZ}\PYG{p}{(}\PYG{n}{arregloError}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]);}
            \PYG{p}{\PYGZcb{}}
            \PYG{n}{sumatoriaX} \PYG{o}{=} \PYG{n}{sumatoriaX} \PYG{o}{/} \PYG{n}{lineasFrame}\PYG{p}{;}
            \PYG{n}{sumatoriaY} \PYG{o}{=} \PYG{n}{sumatoriaY} \PYG{o}{/} \PYG{n}{lineasFrame}\PYG{p}{;}
            \PYG{n}{sumatoriaZ} \PYG{o}{=} \PYG{n}{sumatoriaZ} \PYG{o}{/} \PYG{n}{lineasFrame}\PYG{p}{;}
            \PYG{c+c1}{//se dicta un gesto solo si es mas aproximado que el gesto anterior}
            \PYG{k}{if} \PYG{p}{((}\PYG{n}{sumatoriaX} \PYG{o}{\PYGZlt{}} \PYG{n}{arregloGesto}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{])} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{p}{(}\PYG{n}{sumatoriaY} \PYG{o}{\PYGZlt{}} \PYG{n}{arregloGesto}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{])} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{p}{(}\PYG{n}{sumatoriaZ} \PYG{o}{\PYGZlt{}} \PYG{n}{arregloGesto}\PYG{p}{[}\PYG{l+m+mi}{2}\PYG{p}{]))\PYGZob{}}
              \PYG{n}{gestoRespuesta} \PYG{o}{=} \PYG{n}{linea}\PYG{p}{;}
            \PYG{p}{\PYGZcb{}}
            \PYG{c+c1}{//std::cout \PYGZlt{}\PYGZlt{} linea \PYGZlt{}\PYGZlt{} \PYGZdq{} \PYGZdq{};}
            \PYG{c+c1}{//std::cout \PYGZlt{}\PYGZlt{} \PYGZdq{}(\PYGZdq{}+std::to\PYGZus{}string(sumatoriaX)+\PYGZdq{}, \PYGZdq{}+std::to\PYGZus{}string(sumatoriaY)+\PYGZdq{}, \PYGZdq{}+std::to\PYGZus{}string(sumatoriaZ)+\PYGZdq{})\PYGZdq{} \PYGZlt{}\PYGZlt{} std::endl;            }
          \PYG{p}{\PYGZcb{}}
        \PYG{p}{\PYGZcb{}}

      \PYG{p}{\PYGZcb{}}

    \PYG{p}{\PYGZcb{}}
  \PYG{p}{\PYGZcb{}}
  \PYG{n}{Registro}\PYG{p}{.}\PYG{n}{close}\PYG{p}{();}
  \PYG{k}{return} \PYG{n}{gestoRespuesta}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}



\PYG{c+cm}{/*@brief Funciones que escriben en un archivo los datos extraidos por el leap}
\PYG{c+cm}{ *@param dato es lo que se va a escribir}
\PYG{c+cm}{ *@param modo es como se debe abrir el archivo}
\PYG{c+cm}{ *@param nombre es el nombre del archivo}
\PYG{c+cm}{ */}
\PYG{k+kt}{void} \PYG{n}{EscribirCadena}\PYG{p}{(}\PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{dato}\PYG{p}{,}\PYG{k+kt}{int} \PYG{n}{modo}\PYG{p}{,}\PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{nombre}\PYG{p}{)\PYGZob{}}
    \PYG{n}{std}\PYG{o}{::}\PYG{n}{ofstream} \PYG{n}{archivo}\PYG{p}{;}
    \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{ruta}\PYG{o}{=} \PYG{l+s}{\PYGZdq{}./resources/temp/\PYGZdq{}} \PYG{o}{+} \PYG{n}{nombre}\PYG{p}{;}
    \PYG{k}{if} \PYG{p}{(}\PYG{n}{modo} \PYG{o}{==} \PYG{l+m+mi}{0}\PYG{p}{)\PYGZob{}}
        \PYG{n}{archivo}\PYG{p}{.}\PYG{n}{open}\PYG{p}{(}\PYG{n}{ruta}\PYG{p}{.}\PYG{n}{c\PYGZus{}str}\PYG{p}{(),}\PYG{n}{std}\PYG{o}{::}\PYG{n}{ios}\PYG{o}{::}\PYG{n}{out}\PYG{p}{);} \PYG{c+c1}{//abriendo archivo }
    \PYG{p}{\PYGZcb{}}\PYG{k}{else}\PYG{p}{\PYGZob{}}
        \PYG{n}{archivo}\PYG{p}{.}\PYG{n}{open}\PYG{p}{(}\PYG{n}{ruta}\PYG{p}{.}\PYG{n}{c\PYGZus{}str}\PYG{p}{(),}\PYG{n}{std}\PYG{o}{::}\PYG{n}{ios}\PYG{o}{::}\PYG{n}{app}\PYG{p}{);} \PYG{c+c1}{//abriendo archivo modo a√±adir}
    \PYG{p}{\PYGZcb{}}

    \PYG{k}{if} \PYG{p}{(}\PYG{n}{archivo}\PYG{p}{.}\PYG{n}{fail}\PYG{p}{())\PYGZob{}}
        \PYG{n}{std}\PYG{o}{::}\PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}No se pudo abrir el archivo \PYGZdq{}}  \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{nombre}  \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{} escribir cadema\PYGZdq{}} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{std}\PYG{o}{::}\PYG{n}{endl}\PYG{p}{;}
        \PYG{n}{exit}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}

    \PYG{n}{archivo} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{dato}\PYG{p}{;}

    \PYG{n}{archivo}\PYG{p}{.}\PYG{n}{close}\PYG{p}{();}
\PYG{p}{\PYGZcb{}}
\PYG{c+cm}{/*@brief Funciones que escriben en un archivo los datos extraidos por el leap}
\PYG{c+cm}{ *@param dato es lo que se va a escribir}
\PYG{c+cm}{ *@param modo es como se debe abrir el archivo}
\PYG{c+cm}{ *@param nombre es el nombre del archivo}
\PYG{c+cm}{ */}
\PYG{k+kt}{void} \PYG{n}{EscribirNumero}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{dato}\PYG{p}{,}\PYG{k+kt}{int} \PYG{n}{modo}\PYG{p}{,}\PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{nombre}\PYG{p}{)\PYGZob{}}
    \PYG{n}{std}\PYG{o}{::}\PYG{n}{ofstream} \PYG{n}{archivo}\PYG{p}{;}
    \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{ruta}\PYG{o}{=} \PYG{l+s}{\PYGZdq{}./resources/temp/\PYGZdq{}} \PYG{o}{+} \PYG{n}{nombre}\PYG{p}{;}
    \PYG{k}{if} \PYG{p}{(}\PYG{n}{modo} \PYG{o}{==} \PYG{l+m+mi}{0}\PYG{p}{)\PYGZob{}}
        \PYG{n}{archivo}\PYG{p}{.}\PYG{n}{open}\PYG{p}{(}\PYG{n}{ruta}\PYG{p}{.}\PYG{n}{c\PYGZus{}str}\PYG{p}{(),}\PYG{n}{std}\PYG{o}{::}\PYG{n}{ios}\PYG{o}{::}\PYG{n}{out}\PYG{p}{);} \PYG{c+c1}{//abriendo archivo }
    \PYG{p}{\PYGZcb{}}\PYG{k}{else}\PYG{p}{\PYGZob{}}
        \PYG{n}{archivo}\PYG{p}{.}\PYG{n}{open}\PYG{p}{(}\PYG{n}{ruta}\PYG{p}{.}\PYG{n}{c\PYGZus{}str}\PYG{p}{(),}\PYG{n}{std}\PYG{o}{::}\PYG{n}{ios}\PYG{o}{::}\PYG{n}{app}\PYG{p}{);} \PYG{c+c1}{//abriendo archivo modo a√±adir}
    \PYG{p}{\PYGZcb{}}

    \PYG{k}{if} \PYG{p}{(}\PYG{n}{archivo}\PYG{p}{.}\PYG{n}{fail}\PYG{p}{())\PYGZob{}}
        \PYG{n}{std}\PYG{o}{::}\PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}No se pudo abrir el archivo\PYGZdq{}}  \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{nombre}  \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{} escribir numero\PYGZdq{}} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{std}\PYG{o}{::}\PYG{n}{endl}\PYG{p}{;}
        \PYG{n}{exit}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}

    \PYG{n}{archivo} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{dato}\PYG{p}{;}

    \PYG{n}{archivo}\PYG{p}{.}\PYG{n}{close}\PYG{p}{();}
\PYG{p}{\PYGZcb{}}
\PYG{c+cm}{/*@brief Funciones que escriben en un archivo los datos extraidos por el leap}
\PYG{c+cm}{ *@param dato es lo que se va a escribir}
\PYG{c+cm}{ *@param modo es como se debe abrir el archivo}
\PYG{c+cm}{ *@param nombre es el nombre del archivo}
\PYG{c+cm}{ */}
\PYG{k+kt}{void} \PYG{n}{EscribirVector}\PYG{p}{(}\PYG{n}{Leap}\PYG{o}{::}\PYG{n}{Vector} \PYG{n}{dato}\PYG{p}{,}\PYG{k+kt}{int} \PYG{n}{modo}\PYG{p}{,}\PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{nombre}\PYG{p}{)\PYGZob{}}
    \PYG{n}{std}\PYG{o}{::}\PYG{n}{ofstream} \PYG{n}{archivo}\PYG{p}{;}
    \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{ruta}\PYG{o}{=} \PYG{l+s}{\PYGZdq{}./resources/temp/\PYGZdq{}} \PYG{o}{+} \PYG{n}{nombre}\PYG{p}{;}
    \PYG{k}{if} \PYG{p}{(}\PYG{n}{modo} \PYG{o}{==} \PYG{l+m+mi}{0}\PYG{p}{)\PYGZob{}}
        \PYG{n}{archivo}\PYG{p}{.}\PYG{n}{open}\PYG{p}{(}\PYG{n}{ruta}\PYG{p}{.}\PYG{n}{c\PYGZus{}str}\PYG{p}{(),}\PYG{n}{std}\PYG{o}{::}\PYG{n}{ios}\PYG{o}{::}\PYG{n}{out}\PYG{p}{);} \PYG{c+c1}{//abriendo archivo }
    \PYG{p}{\PYGZcb{}}\PYG{k}{else}\PYG{p}{\PYGZob{}}
        \PYG{n}{archivo}\PYG{p}{.}\PYG{n}{open}\PYG{p}{(}\PYG{n}{ruta}\PYG{p}{.}\PYG{n}{c\PYGZus{}str}\PYG{p}{(),}\PYG{n}{std}\PYG{o}{::}\PYG{n}{ios}\PYG{o}{::}\PYG{n}{app}\PYG{p}{);} \PYG{c+c1}{//abriendo archivo modo a√±adir}
    \PYG{p}{\PYGZcb{}}

    \PYG{k}{if} \PYG{p}{(}\PYG{n}{archivo}\PYG{p}{.}\PYG{n}{fail}\PYG{p}{())\PYGZob{}}
        \PYG{n}{std}\PYG{o}{::}\PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}No se pudo abrir el archivo\PYGZdq{}} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{nombre}   \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{} escribir vector\PYGZdq{}} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{std}\PYG{o}{::}\PYG{n}{endl}\PYG{p}{;}
        \PYG{n}{exit}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}

    \PYG{n}{archivo} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{dato}\PYG{p}{;}

    \PYG{n}{archivo}\PYG{p}{.}\PYG{n}{close}\PYG{p}{();}
\PYG{p}{\PYGZcb{}}


\PYG{c+cm}{/*@brief Funciones que cuenta la cantidad de Frames medidos}
\PYG{c+cm}{ *@param nombre es el nombre del archivo}
\PYG{c+cm}{ *@return devuelve √±a cantidad de lineas}
\PYG{c+cm}{ */}
\PYG{k+kt}{int} \PYG{n}{ContarFrames}\PYG{p}{(}\PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{nombre}\PYG{p}{)\PYGZob{}}
    \PYG{n}{std}\PYG{o}{::}\PYG{n}{ifstream} \PYG{n}{archivo}\PYG{p}{;}
    \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{ruta}\PYG{o}{=} \PYG{l+s}{\PYGZdq{}./resources/temp/\PYGZdq{}} \PYG{o}{+} \PYG{n}{nombre}\PYG{p}{;}
    \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{linea}\PYG{p}{;}
    \PYG{k+kt}{int} \PYG{n}{contador} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;}
    \PYG{n}{archivo}\PYG{p}{.}\PYG{n}{open}\PYG{p}{(}\PYG{n}{ruta}\PYG{p}{.}\PYG{n}{c\PYGZus{}str}\PYG{p}{(),}\PYG{n}{std}\PYG{o}{::}\PYG{n}{ios}\PYG{o}{::}\PYG{n}{in}\PYG{p}{);} \PYG{c+c1}{//abriendo archivo modo a√±adir}

    \PYG{k}{if} \PYG{p}{(}\PYG{n}{archivo}\PYG{p}{.}\PYG{n}{fail}\PYG{p}{())\PYGZob{}}
        \PYG{n}{std}\PYG{o}{::}\PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}No se pudo abrir el archivo \PYGZdq{}}  \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{nombre} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{} contarFrames \PYGZdq{}} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{std}\PYG{o}{::}\PYG{n}{endl}\PYG{p}{;}
        \PYG{n}{exit}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{);}
    \PYG{p}{\PYGZcb{}}

    \PYG{k}{while} \PYG{p}{(}\PYG{o}{!}\PYG{n}{archivo}\PYG{p}{.}\PYG{n}{eof}\PYG{p}{())\PYGZob{}}
      \PYG{n}{std}\PYG{o}{::}\PYG{n}{getline}\PYG{p}{(}\PYG{n}{archivo}\PYG{p}{,}\PYG{n}{linea}\PYG{p}{);}
      \PYG{n}{contador}\PYG{o}{++}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}

    \PYG{n}{archivo}\PYG{p}{.}\PYG{n}{close}\PYG{p}{();}
    \PYG{k}{return} \PYG{n}{contador}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}


\PYG{c+cm}{/*}
\PYG{c+cm}{ *@brief clase que define el Lisener, en esta clase se recuperan datos dependiendo del evento que suseda}
\PYG{c+cm}{ */}

\PYG{k}{class} \PYG{n+nc}{SampleListener} \PYG{o}{:} \PYG{k}{public} \PYG{n}{Listener} \PYG{p}{\PYGZob{}}
  \PYG{k}{public}\PYG{o}{:}
    \PYG{k}{virtual} \PYG{k+kt}{void} \PYG{n}{onInit}\PYG{p}{(}\PYG{k}{const} \PYG{n}{Controller}\PYG{o}{\PYGZam{}}\PYG{p}{);}
    \PYG{k}{virtual} \PYG{k+kt}{void} \PYG{n+nf}{onConnect}\PYG{p}{(}\PYG{k}{const} \PYG{n}{Controller}\PYG{o}{\PYGZam{}}\PYG{p}{);}
    \PYG{k}{virtual} \PYG{k+kt}{void} \PYG{n+nf}{onDisconnect}\PYG{p}{(}\PYG{k}{const} \PYG{n}{Controller}\PYG{o}{\PYGZam{}}\PYG{p}{);}
    \PYG{k}{virtual} \PYG{k+kt}{void} \PYG{n+nf}{onExit}\PYG{p}{(}\PYG{k}{const} \PYG{n}{Controller}\PYG{o}{\PYGZam{}}\PYG{p}{);}
    \PYG{k}{virtual} \PYG{k+kt}{void} \PYG{n+nf}{onFrame}\PYG{p}{(}\PYG{k}{const} \PYG{n}{Controller}\PYG{o}{\PYGZam{}}\PYG{p}{);}
    \PYG{k}{virtual} \PYG{k+kt}{void} \PYG{n+nf}{onFocusGained}\PYG{p}{(}\PYG{k}{const} \PYG{n}{Controller}\PYG{o}{\PYGZam{}}\PYG{p}{);}
    \PYG{k}{virtual} \PYG{k+kt}{void} \PYG{n+nf}{onFocusLost}\PYG{p}{(}\PYG{k}{const} \PYG{n}{Controller}\PYG{o}{\PYGZam{}}\PYG{p}{);}
    \PYG{k}{virtual} \PYG{k+kt}{void} \PYG{n+nf}{onDeviceChange}\PYG{p}{(}\PYG{k}{const} \PYG{n}{Controller}\PYG{o}{\PYGZam{}}\PYG{p}{);}
    \PYG{k}{virtual} \PYG{k+kt}{void} \PYG{n+nf}{onServiceConnect}\PYG{p}{(}\PYG{k}{const} \PYG{n}{Controller}\PYG{o}{\PYGZam{}}\PYG{p}{);}
    \PYG{k}{virtual} \PYG{k+kt}{void} \PYG{n+nf}{onServiceDisconnect}\PYG{p}{(}\PYG{k}{const} \PYG{n}{Controller}\PYG{o}{\PYGZam{}}\PYG{p}{);}

  \PYG{k}{private}\PYG{o}{:}
\PYG{p}{\PYGZcb{};}

\PYG{k}{const} \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{fingerNames}\PYG{p}{[]} \PYG{o}{=} \PYG{p}{\PYGZob{}}\PYG{l+s}{\PYGZdq{}Thumb\PYGZdq{}}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}Index\PYGZdq{}}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}Middle\PYGZdq{}}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}Ring\PYGZdq{}}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}Pinky\PYGZdq{}}\PYG{p}{\PYGZcb{};}
\PYG{k}{const} \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{boneNames}\PYG{p}{[]} \PYG{o}{=} \PYG{p}{\PYGZob{}}\PYG{l+s}{\PYGZdq{}Metacarpal\PYGZdq{}}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}Proximal\PYGZdq{}}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}Middle\PYGZdq{}}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}Distal\PYGZdq{}}\PYG{p}{\PYGZcb{};}
\PYG{k}{const} \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{stateNames}\PYG{p}{[]} \PYG{o}{=} \PYG{p}{\PYGZob{}}\PYG{l+s}{\PYGZdq{}STATE\PYGZus{}INVALID\PYGZdq{}}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}STATE\PYGZus{}START\PYGZdq{}}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}STATE\PYGZus{}UPDATE\PYGZdq{}}\PYG{p}{,} \PYG{l+s}{\PYGZdq{}STATE\PYGZus{}END\PYGZdq{}}\PYG{p}{\PYGZcb{};}

\PYG{k+kt}{void} \PYG{n}{SampleListener}\PYG{o}{::}\PYG{n}{onInit}\PYG{p}{(}\PYG{k}{const} \PYG{n}{Controller}\PYG{o}{\PYGZam{}} \PYG{n}{controller}\PYG{p}{)} \PYG{p}{\PYGZob{}}
\PYG{c+c1}{//////////////////////////////////////////  std::cout \PYGZlt{}\PYGZlt{} \PYGZdq{}Initialized\PYGZdq{} \PYGZlt{}\PYGZlt{} std::endl;}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void} \PYG{n}{SampleListener}\PYG{o}{::}\PYG{n}{onConnect}\PYG{p}{(}\PYG{k}{const} \PYG{n}{Controller}\PYG{o}{\PYGZam{}} \PYG{n}{controller}\PYG{p}{)} \PYG{p}{\PYGZob{}}
\PYG{c+c1}{//////////////////////////////////////////  std::cout \PYGZlt{}\PYGZlt{} \PYGZdq{}Connected\PYGZdq{} \PYGZlt{}\PYGZlt{} std::endl;}
  \PYG{n}{controller}\PYG{p}{.}\PYG{n}{enableGesture}\PYG{p}{(}\PYG{n}{Gesture}\PYG{o}{::}\PYG{n}{TYPE\PYGZus{}CIRCLE}\PYG{p}{);}
  \PYG{n}{controller}\PYG{p}{.}\PYG{n}{enableGesture}\PYG{p}{(}\PYG{n}{Gesture}\PYG{o}{::}\PYG{n}{TYPE\PYGZus{}KEY\PYGZus{}TAP}\PYG{p}{);}
  \PYG{n}{controller}\PYG{p}{.}\PYG{n}{enableGesture}\PYG{p}{(}\PYG{n}{Gesture}\PYG{o}{::}\PYG{n}{TYPE\PYGZus{}SCREEN\PYGZus{}TAP}\PYG{p}{);}
  \PYG{n}{controller}\PYG{p}{.}\PYG{n}{enableGesture}\PYG{p}{(}\PYG{n}{Gesture}\PYG{o}{::}\PYG{n}{TYPE\PYGZus{}SWIPE}\PYG{p}{);}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void} \PYG{n}{SampleListener}\PYG{o}{::}\PYG{n}{onDisconnect}\PYG{p}{(}\PYG{k}{const} \PYG{n}{Controller}\PYG{o}{\PYGZam{}} \PYG{n}{controller}\PYG{p}{)} \PYG{p}{\PYGZob{}}
  \PYG{c+c1}{// Note: not dispatched when running in a debugger.}
\PYG{c+c1}{//////////////////////////////////////////  std::cout \PYGZlt{}\PYGZlt{} \PYGZdq{}Disconnected\PYGZdq{} \PYGZlt{}\PYGZlt{} std::endl;}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void} \PYG{n}{SampleListener}\PYG{o}{::}\PYG{n}{onExit}\PYG{p}{(}\PYG{k}{const} \PYG{n}{Controller}\PYG{o}{\PYGZam{}} \PYG{n}{controller}\PYG{p}{)} \PYG{p}{\PYGZob{}}
\PYG{c+c1}{//////////////////////////////////////////  std::cout \PYGZlt{}\PYGZlt{} \PYGZdq{}Exited\PYGZdq{} \PYGZlt{}\PYGZlt{} std::endl;}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void} \PYG{n}{SampleListener}\PYG{o}{::}\PYG{n}{onFrame}\PYG{p}{(}\PYG{k}{const} \PYG{n}{Controller}\PYG{o}{\PYGZam{}} \PYG{n}{controller}\PYG{p}{)} \PYG{p}{\PYGZob{}}
  \PYG{c+c1}{// Get the most recent frame and report some basic information}
  \PYG{c+c1}{//system(\PYGZdq{}sleep 1\PYGZdq{});}
  \PYG{k}{const} \PYG{n}{Frame} \PYG{n}{frame} \PYG{o}{=} \PYG{n}{controller}\PYG{p}{.}\PYG{n}{frame}\PYG{p}{();}
  \PYG{n}{HandList} \PYG{n}{manitos} \PYG{o}{=} \PYG{n}{frame}\PYG{p}{.}\PYG{n}{hands}\PYG{p}{();}
  \PYG{c+c1}{////////////////////////////////////////// std::cout \PYGZlt{}\PYGZlt{} \PYGZdq{}Frame id: \PYGZdq{} \PYGZlt{}\PYGZlt{} frame.id()}
  \PYG{c+c1}{//////////////////////////////////////////           \PYGZlt{}\PYGZlt{} \PYGZdq{}, timestamp: \PYGZdq{} \PYGZlt{}\PYGZlt{} frame.timestamp()}
  \PYG{c+c1}{//////////////////////////////////////////           \PYGZlt{}\PYGZlt{} \PYGZdq{}, hands: \PYGZdq{} \PYGZlt{}\PYGZlt{} frame.hands().count()}
  \PYG{c+c1}{//////////////////////////////////////////           \PYGZlt{}\PYGZlt{} \PYGZdq{}, extended fingers: \PYGZdq{} \PYGZlt{}\PYGZlt{} frame.fingers().extended().count()}
  \PYG{c+c1}{//////////////////////////////////////////           \PYGZlt{}\PYGZlt{} \PYGZdq{}, tools: \PYGZdq{} \PYGZlt{}\PYGZlt{} frame.tools().count()}
  \PYG{c+c1}{//////////////////////////////////////////           \PYGZlt{}\PYGZlt{} \PYGZdq{}, gestures: \PYGZdq{} \PYGZlt{}\PYGZlt{} frame.gestures().count() \PYGZlt{}\PYGZlt{} std::endl;}
  \PYG{c+c1}{//codigo modificado}
  \PYG{c+c1}{//}
  \PYG{c+c1}{//}
  \PYG{k+kt}{int} \PYG{n}{salir} \PYG{o}{=} \PYG{n}{ContarFrames}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}FrameID\PYGZdq{}}\PYG{p}{);}
  \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{mano}\PYG{p}{;}
  \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{dedo}\PYG{p}{;}
  \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{hueso}\PYG{p}{;}
  \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{espacio} \PYG{o}{=} \PYG{l+s}{\PYGZdq{} \PYGZdq{}}\PYG{p}{;}
  \PYG{n}{EscribirNumero}\PYG{p}{(}\PYG{n}{frame}\PYG{p}{.}\PYG{n}{id}\PYG{p}{(),}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{l+s}{\PYGZdq{}FrameID\PYGZdq{}}\PYG{p}{);}
  \PYG{n}{EscribirNumero}\PYG{p}{(}\PYG{n}{frame}\PYG{p}{.}\PYG{n}{hands}\PYG{p}{().}\PYG{n}{count}\PYG{p}{(),}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{l+s}{\PYGZdq{}CtdManos\PYGZdq{}}\PYG{p}{);}
  \PYG{n}{EscribirNumero}\PYG{p}{(}\PYG{n}{frame}\PYG{p}{.}\PYG{n}{fingers}\PYG{p}{().}\PYG{n}{extended}\PYG{p}{().}\PYG{n}{count}\PYG{p}{(),}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{l+s}{\PYGZdq{}CtdDedos\PYGZdq{}}\PYG{p}{);}
  \PYG{c+c1}{//}
  \PYG{c+c1}{//}
  \PYG{c+c1}{//}
  \PYG{n}{HandList} \PYG{n}{hands} \PYG{o}{=} \PYG{n}{frame}\PYG{p}{.}\PYG{n}{hands}\PYG{p}{();}
  \PYG{k}{for} \PYG{p}{(}\PYG{n}{HandList}\PYG{o}{::}\PYG{n}{const\PYGZus{}iterator} \PYG{n}{hl} \PYG{o}{=} \PYG{n}{hands}\PYG{p}{.}\PYG{n}{begin}\PYG{p}{();} \PYG{n}{hl} \PYG{o}{!=} \PYG{n}{hands}\PYG{p}{.}\PYG{n}{end}\PYG{p}{();} \PYG{o}{++}\PYG{n}{hl}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{c+c1}{// Get the first hand}
    \PYG{k}{const} \PYG{n}{Hand} \PYG{n}{hand} \PYG{o}{=} \PYG{o}{*}\PYG{n}{hl}\PYG{p}{;}
    \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{handType} \PYG{o}{=} \PYG{n}{hand}\PYG{p}{.}\PYG{n}{isLeft}\PYG{p}{()} \PYG{o}{?} \PYG{l+s}{\PYGZdq{}Left hand\PYGZdq{}} \PYG{o}{:} \PYG{l+s}{\PYGZdq{}Right hand\PYGZdq{}}\PYG{p}{;}
\PYG{c+c1}{//////////////////////////////////////////    std::cout \PYGZlt{}\PYGZlt{} std::string(2, \PYGZsq{} \PYGZsq{}) \PYGZlt{}\PYGZlt{} handType \PYGZlt{}\PYGZlt{} \PYGZdq{}, id: \PYGZdq{} \PYGZlt{}\PYGZlt{} hand.id()}
\PYG{c+c1}{//////////////////////////////////////////              \PYGZlt{}\PYGZlt{} \PYGZdq{}, palm position: \PYGZdq{} \PYGZlt{}\PYGZlt{} hand.palmPosition() \PYGZlt{}\PYGZlt{} std::endl;}
    \PYG{c+c1}{// Get the hand\PYGZsq{}s normal vector and direction}
\PYG{c+c1}{//////////////////////////////////////////    const Vector normal = hand.palmNormal();}
\PYG{c+c1}{//////////////////////////////////////////    const Vector direction = hand.direction();}
    \PYG{n}{mano} \PYG{o}{=} \PYG{n}{handType}\PYG{p}{;}
    \PYG{c+c1}{// Calculate the hand\PYGZsq{}s pitch, roll, and yaw angles}
\PYG{c+c1}{//////////////////////////////////////////    std::cout \PYGZlt{}\PYGZlt{} std::string(2, \PYGZsq{} \PYGZsq{}) \PYGZlt{}\PYGZlt{}  \PYGZdq{}pitch: \PYGZdq{} \PYGZlt{}\PYGZlt{} direction.pitch() * RAD\PYGZus{}TO\PYGZus{}DEG \PYGZlt{}\PYGZlt{} \PYGZdq{} degrees, \PYGZdq{}}
\PYG{c+c1}{//////////////////////////////////////////              \PYGZlt{}\PYGZlt{} \PYGZdq{}roll: \PYGZdq{} \PYGZlt{}\PYGZlt{} normal.roll() * RAD\PYGZus{}TO\PYGZus{}DEG \PYGZlt{}\PYGZlt{} \PYGZdq{} degrees, \PYGZdq{}}
\PYG{c+c1}{//////////////////////////////////////////              \PYGZlt{}\PYGZlt{} \PYGZdq{}yaw: \PYGZdq{} \PYGZlt{}\PYGZlt{} direction.yaw() * RAD\PYGZus{}TO\PYGZus{}DEG \PYGZlt{}\PYGZlt{} \PYGZdq{} degrees\PYGZdq{} \PYGZlt{}\PYGZlt{} std::endl;}

    \PYG{c+c1}{// Get the Arm bone}
    \PYG{n}{Arm} \PYG{n}{arm} \PYG{o}{=} \PYG{n}{hand}\PYG{p}{.}\PYG{n}{arm}\PYG{p}{();}
\PYG{c+c1}{//////////////////////////////////////////    std::cout \PYGZlt{}\PYGZlt{} std::string(2, \PYGZsq{} \PYGZsq{}) \PYGZlt{}\PYGZlt{}  \PYGZdq{}Arm direction: \PYGZdq{} \PYGZlt{}\PYGZlt{} arm.direction()}
\PYG{c+c1}{//////////////////////////////////////////              \PYGZlt{}\PYGZlt{} \PYGZdq{} wrist position: \PYGZdq{} \PYGZlt{}\PYGZlt{} arm.wristPosition()}
\PYG{c+c1}{//////////////////////////////////////////              \PYGZlt{}\PYGZlt{} \PYGZdq{} elbow position: \PYGZdq{} \PYGZlt{}\PYGZlt{} arm.elbowPosition() \PYGZlt{}\PYGZlt{} std::endl;}

    \PYG{c+c1}{// Get fingers}
    \PYG{k}{const} \PYG{n}{FingerList} \PYG{n}{fingers} \PYG{o}{=} \PYG{n}{hand}\PYG{p}{.}\PYG{n}{fingers}\PYG{p}{();}
    \PYG{k}{for} \PYG{p}{(}\PYG{n}{FingerList}\PYG{o}{::}\PYG{n}{const\PYGZus{}iterator} \PYG{n}{fl} \PYG{o}{=} \PYG{n}{fingers}\PYG{p}{.}\PYG{n}{begin}\PYG{p}{();} \PYG{n}{fl} \PYG{o}{!=} \PYG{n}{fingers}\PYG{p}{.}\PYG{n}{end}\PYG{p}{();} \PYG{o}{++}\PYG{n}{fl}\PYG{p}{)} \PYG{p}{\PYGZob{}}
      \PYG{k}{const} \PYG{n}{Finger} \PYG{n}{finger} \PYG{o}{=} \PYG{o}{*}\PYG{n}{fl}\PYG{p}{;}
\PYG{c+c1}{//////////////////////////////////////////      std::cout \PYGZlt{}\PYGZlt{} std::string(4, \PYGZsq{} \PYGZsq{}) \PYGZlt{}\PYGZlt{}  fingerNames[finger.type()]}
\PYG{c+c1}{//////////////////////////////////////////                \PYGZlt{}\PYGZlt{} \PYGZdq{} finger, id: \PYGZdq{} \PYGZlt{}\PYGZlt{} finger.id()}
\PYG{c+c1}{//////////////////////////////////////////                \PYGZlt{}\PYGZlt{} \PYGZdq{}, length: \PYGZdq{} \PYGZlt{}\PYGZlt{} finger.length()}
\PYG{c+c1}{//////////////////////////////////////////                \PYGZlt{}\PYGZlt{} \PYGZdq{}mm, width: \PYGZdq{} \PYGZlt{}\PYGZlt{} finger.width() \PYGZlt{}\PYGZlt{} std::endl;}
      \PYG{n}{dedo} \PYG{o}{=} \PYG{n}{fingerNames}\PYG{p}{[}\PYG{n}{finger}\PYG{p}{.}\PYG{n}{type}\PYG{p}{()];}
      \PYG{c+c1}{// Get finger bones}
      \PYG{k}{for} \PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{b} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;} \PYG{n}{b} \PYG{o}{\PYGZlt{}} \PYG{l+m+mi}{4}\PYG{p}{;} \PYG{o}{++}\PYG{n}{b}\PYG{p}{)} \PYG{p}{\PYGZob{}}
        \PYG{n}{Bone}\PYG{o}{::}\PYG{n}{Type} \PYG{n}{boneType} \PYG{o}{=} \PYG{k}{static\PYGZus{}cast}\PYG{o}{\PYGZlt{}}\PYG{n}{Bone}\PYG{o}{::}\PYG{n}{Type}\PYG{o}{\PYGZgt{}}\PYG{p}{(}\PYG{n}{b}\PYG{p}{);}
        \PYG{n}{Bone} \PYG{n}{bone} \PYG{o}{=} \PYG{n}{finger}\PYG{p}{.}\PYG{n}{bone}\PYG{p}{(}\PYG{n}{boneType}\PYG{p}{);}
\PYG{c+c1}{//////////////////////////////////////////        std::cout \PYGZlt{}\PYGZlt{} std::string(6, \PYGZsq{} \PYGZsq{}) \PYGZlt{}\PYGZlt{}  boneNames[boneType]}
\PYG{c+c1}{//////////////////////////////////////////                  \PYGZlt{}\PYGZlt{} \PYGZdq{} bone, start: \PYGZdq{} \PYGZlt{}\PYGZlt{} bone.prevJoint()}
\PYG{c+c1}{//////////////////////////////////////////                  \PYGZlt{}\PYGZlt{} \PYGZdq{}, end: \PYGZdq{} \PYGZlt{}\PYGZlt{} bone.nextJoint()}
\PYG{c+c1}{//////////////////////////////////////////                  \PYGZlt{}\PYGZlt{} \PYGZdq{}, direction: \PYGZdq{} \PYGZlt{}\PYGZlt{} bone.direction() * RAD\PYGZus{}TO\PYGZus{}DEG \PYGZlt{}\PYGZlt{} \PYGZdq{}grados\PYGZdq{} \PYGZlt{}\PYGZlt{} std::endl;}
        \PYG{n}{hueso} \PYG{o}{=} \PYG{n}{boneNames}\PYG{p}{[}\PYG{n}{boneType}\PYG{p}{];}
        \PYG{k}{if} \PYG{p}{(}\PYG{n}{salir} \PYG{o}{==} \PYG{l+m+mi}{1}\PYG{p}{)\PYGZob{}}
          \PYG{n}{EscribirCadena}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{,}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{n}{mano}\PYG{o}{+}\PYG{n}{espacio}\PYG{o}{+}\PYG{n}{dedo}\PYG{o}{+}\PYG{n}{espacio}\PYG{o}{+}\PYG{n}{hueso}\PYG{p}{);}
          \PYG{n}{EscribirCadena}\PYG{p}{(}\PYG{n}{mano}\PYG{o}{+}\PYG{n}{espacio}\PYG{o}{+}\PYG{n}{dedo}\PYG{o}{+}\PYG{n}{espacio}\PYG{o}{+}\PYG{n}{hueso}\PYG{o}{+}\PYG{l+s}{\PYGZdq{}}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{,}\PYG{l+m+mi}{1}\PYG{p}{,}\PYG{l+s}{\PYGZdq{}ListaArchivos\PYGZdq{}}\PYG{p}{);}
        \PYG{p}{\PYGZcb{}}
        \PYG{n}{EscribirVector}\PYG{p}{(}\PYG{n}{bone}\PYG{p}{.}\PYG{n}{direction}\PYG{p}{()} \PYG{o}{*} \PYG{n}{RAD\PYGZus{}TO\PYGZus{}DEG}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{,}\PYG{n}{mano}\PYG{o}{+}\PYG{n}{espacio}\PYG{o}{+}\PYG{n}{dedo}\PYG{o}{+}\PYG{n}{espacio}\PYG{o}{+}\PYG{n}{hueso}\PYG{p}{);}
      \PYG{p}{\PYGZcb{}}
    \PYG{p}{\PYGZcb{}}
  \PYG{p}{\PYGZcb{}}
  \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{comprobar} \PYG{o}{=} \PYG{n}{ComprobarActual}\PYG{p}{();}
  \PYG{k}{if} \PYG{p}{(}\PYG{n}{strcmp}\PYG{p}{(}\PYG{n}{comprobar}\PYG{p}{.}\PYG{n}{c\PYGZus{}str}\PYG{p}{(),} \PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{)} \PYG{o}{!=} \PYG{l+m+mi}{0}\PYG{p}{)\PYGZob{}}
    \PYG{n}{std}\PYG{o}{::}\PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZdq{}} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{std}\PYG{o}{::}\PYG{n}{endl}\PYG{p}{;}
    \PYG{n}{std}\PYG{o}{::}\PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{comprobar} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{std}\PYG{o}{::}\PYG{n}{endl}\PYG{p}{;}
    \PYG{n}{std}\PYG{o}{::}\PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZdq{}} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{n}{std}\PYG{o}{::}\PYG{n}{endl}\PYG{p}{;}
  \PYG{p}{\PYGZcb{}}
  \PYG{c+c1}{//exit(1);}
  \PYG{n}{EscribirCadena}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{,}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{l+s}{\PYGZdq{}ListaArchivos\PYGZdq{}}\PYG{p}{);} 
  \PYG{c+c1}{//system(\PYGZdq{}sleep 1\PYGZdq{});}


  \PYG{c+c1}{// Get tools}
  \PYG{k}{const} \PYG{n}{ToolList} \PYG{n}{tools} \PYG{o}{=} \PYG{n}{frame}\PYG{p}{.}\PYG{n}{tools}\PYG{p}{();}
  \PYG{k}{for} \PYG{p}{(}\PYG{n}{ToolList}\PYG{o}{::}\PYG{n}{const\PYGZus{}iterator} \PYG{n}{tl} \PYG{o}{=} \PYG{n}{tools}\PYG{p}{.}\PYG{n}{begin}\PYG{p}{();} \PYG{n}{tl} \PYG{o}{!=} \PYG{n}{tools}\PYG{p}{.}\PYG{n}{end}\PYG{p}{();} \PYG{o}{++}\PYG{n}{tl}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{k}{const} \PYG{n}{Tool} \PYG{n}{tool} \PYG{o}{=} \PYG{o}{*}\PYG{n}{tl}\PYG{p}{;}
\PYG{c+c1}{//////////////////////////////////////////    std::cout \PYGZlt{}\PYGZlt{} std::string(2, \PYGZsq{} \PYGZsq{}) \PYGZlt{}\PYGZlt{}  \PYGZdq{}Tool, id: \PYGZdq{} \PYGZlt{}\PYGZlt{} tool.id()}
\PYG{c+c1}{//////////////////////////////////////////              \PYGZlt{}\PYGZlt{} \PYGZdq{}, position: \PYGZdq{} \PYGZlt{}\PYGZlt{} tool.tipPosition()}
\PYG{c+c1}{//////////////////////////////////////////              \PYGZlt{}\PYGZlt{} \PYGZdq{}, direction: \PYGZdq{} \PYGZlt{}\PYGZlt{} tool.direction() \PYGZlt{}\PYGZlt{} std::endl;}
  \PYG{p}{\PYGZcb{}}
  \PYG{c+c1}{// Get gestures}
  \PYG{k}{const} \PYG{n}{GestureList} \PYG{n}{gestures} \PYG{o}{=} \PYG{n}{frame}\PYG{p}{.}\PYG{n}{gestures}\PYG{p}{();}
  \PYG{k}{for} \PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{g} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;} \PYG{n}{g} \PYG{o}{\PYGZlt{}} \PYG{n}{gestures}\PYG{p}{.}\PYG{n}{count}\PYG{p}{();} \PYG{o}{++}\PYG{n}{g}\PYG{p}{)} \PYG{p}{\PYGZob{}}
    \PYG{n}{Gesture} \PYG{n}{gesture} \PYG{o}{=} \PYG{n}{gestures}\PYG{p}{[}\PYG{n}{g}\PYG{p}{];}

    \PYG{k}{switch} \PYG{p}{(}\PYG{n}{gesture}\PYG{p}{.}\PYG{n}{type}\PYG{p}{())} \PYG{p}{\PYGZob{}}
      \PYG{k}{case} \PYG{n}{Gesture}\PYG{o}{::}\PYG{n+nl}{TYPE\PYGZus{}CIRCLE}\PYG{p}{:}
      \PYG{p}{\PYGZob{}}
        \PYG{n}{CircleGesture} \PYG{n}{circle} \PYG{o}{=} \PYG{n}{gesture}\PYG{p}{;}
        \PYG{n}{std}\PYG{o}{::}\PYG{n}{string} \PYG{n}{clockwiseness}\PYG{p}{;}

        \PYG{k}{if} \PYG{p}{(}\PYG{n}{circle}\PYG{p}{.}\PYG{n}{pointable}\PYG{p}{().}\PYG{n}{direction}\PYG{p}{().}\PYG{n}{angleTo}\PYG{p}{(}\PYG{n}{circle}\PYG{p}{.}\PYG{n}{normal}\PYG{p}{())} \PYG{o}{\PYGZlt{}=} \PYG{n}{PI}\PYG{o}{/}\PYG{l+m+mi}{2}\PYG{p}{)} \PYG{p}{\PYGZob{}}
          \PYG{n}{clockwiseness} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}clockwise\PYGZdq{}}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}} \PYG{k}{else} \PYG{p}{\PYGZob{}}
          \PYG{n}{clockwiseness} \PYG{o}{=} \PYG{l+s}{\PYGZdq{}counterclockwise\PYGZdq{}}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}

        \PYG{c+c1}{// Calculate angle swept since last frame}
\PYG{c+c1}{//////////////////////////////////////////        float sweptAngle = 0;}
        \PYG{k}{if} \PYG{p}{(}\PYG{n}{circle}\PYG{p}{.}\PYG{n}{state}\PYG{p}{()} \PYG{o}{!=} \PYG{n}{Gesture}\PYG{o}{::}\PYG{n}{STATE\PYGZus{}START}\PYG{p}{)} \PYG{p}{\PYGZob{}}
          \PYG{n}{CircleGesture} \PYG{n}{previousUpdate} \PYG{o}{=} \PYG{n}{CircleGesture}\PYG{p}{(}\PYG{n}{controller}\PYG{p}{.}\PYG{n}{frame}\PYG{p}{(}\PYG{l+m+mi}{1}\PYG{p}{).}\PYG{n}{gesture}\PYG{p}{(}\PYG{n}{circle}\PYG{p}{.}\PYG{n}{id}\PYG{p}{()));}
\PYG{c+c1}{//////////////////////////////////////////          sweptAngle = (circle.progress() \PYGZhy{} previousUpdate.progress()) * 2 * PI;}
        \PYG{p}{\PYGZcb{}}
\PYG{c+c1}{//////////////////////////////////////////        std::cout \PYGZlt{}\PYGZlt{} std::string(2, \PYGZsq{} \PYGZsq{})}
\PYG{c+c1}{//////////////////////////////////////////                  \PYGZlt{}\PYGZlt{} \PYGZdq{}Circle id: \PYGZdq{} \PYGZlt{}\PYGZlt{} gesture.id()}
\PYG{c+c1}{//////////////////////////////////////////                  \PYGZlt{}\PYGZlt{} \PYGZdq{}, state: \PYGZdq{} \PYGZlt{}\PYGZlt{} stateNames[gesture.state()]}
\PYG{c+c1}{//////////////////////////////////////////                  \PYGZlt{}\PYGZlt{} \PYGZdq{}, progress: \PYGZdq{} \PYGZlt{}\PYGZlt{} circle.progress()}
\PYG{c+c1}{//////////////////////////////////////////                  \PYGZlt{}\PYGZlt{} \PYGZdq{}, radius: \PYGZdq{} \PYGZlt{}\PYGZlt{} circle.radius()}
\PYG{c+c1}{//////////////////////////////////////////                  \PYGZlt{}\PYGZlt{} \PYGZdq{}, angle \PYGZdq{} \PYGZlt{}\PYGZlt{} sweptAngle * RAD\PYGZus{}TO\PYGZus{}DEG}
\PYG{c+c1}{//////////////////////////////////////////                  \PYGZlt{}\PYGZlt{}  \PYGZdq{}, \PYGZdq{} \PYGZlt{}\PYGZlt{} clockwiseness \PYGZlt{}\PYGZlt{} std::endl;}
        \PYG{k}{break}\PYG{p}{;}
      \PYG{p}{\PYGZcb{}}
      \PYG{k}{case} \PYG{n}{Gesture}\PYG{o}{::}\PYG{n+nl}{TYPE\PYGZus{}SWIPE}\PYG{p}{:}
      \PYG{p}{\PYGZob{}}
        \PYG{n}{SwipeGesture} \PYG{n}{swipe} \PYG{o}{=} \PYG{n}{gesture}\PYG{p}{;}
\PYG{c+c1}{//////////////////////////////////////////        std::cout \PYGZlt{}\PYGZlt{} std::string(2, \PYGZsq{} \PYGZsq{})}
\PYG{c+c1}{//////////////////////////////////////////          \PYGZlt{}\PYGZlt{} \PYGZdq{}Swipe id: \PYGZdq{} \PYGZlt{}\PYGZlt{} gesture.id()}
\PYG{c+c1}{//////////////////////////////////////////          \PYGZlt{}\PYGZlt{} \PYGZdq{}, state: \PYGZdq{} \PYGZlt{}\PYGZlt{} stateNames[gesture.state()]}
\PYG{c+c1}{//////////////////////////////////////////          \PYGZlt{}\PYGZlt{} \PYGZdq{}, direction: \PYGZdq{} \PYGZlt{}\PYGZlt{} swipe.direction()}
\PYG{c+c1}{//////////////////////////////////////////          \PYGZlt{}\PYGZlt{} \PYGZdq{}, speed: \PYGZdq{} \PYGZlt{}\PYGZlt{} swipe.speed() \PYGZlt{}\PYGZlt{} std::endl;}
        \PYG{k}{break}\PYG{p}{;}
      \PYG{p}{\PYGZcb{}}
      \PYG{k}{case} \PYG{n}{Gesture}\PYG{o}{::}\PYG{n+nl}{TYPE\PYGZus{}KEY\PYGZus{}TAP}\PYG{p}{:}
      \PYG{p}{\PYGZob{}}
        \PYG{n}{KeyTapGesture} \PYG{n}{tap} \PYG{o}{=} \PYG{n}{gesture}\PYG{p}{;}
\PYG{c+c1}{//////////////////////////////////////////        std::cout \PYGZlt{}\PYGZlt{} std::string(2, \PYGZsq{} \PYGZsq{})}
\PYG{c+c1}{//////////////////////////////////////////          \PYGZlt{}\PYGZlt{} \PYGZdq{}Key Tap id: \PYGZdq{} \PYGZlt{}\PYGZlt{} gesture.id()}
\PYG{c+c1}{//////////////////////////////////////////          \PYGZlt{}\PYGZlt{} \PYGZdq{}, state: \PYGZdq{} \PYGZlt{}\PYGZlt{} stateNames[gesture.state()]}
\PYG{c+c1}{//////////////////////////////////////////          \PYGZlt{}\PYGZlt{} \PYGZdq{}, position: \PYGZdq{} \PYGZlt{}\PYGZlt{} tap.position()}
\PYG{c+c1}{//////////////////////////////////////////          \PYGZlt{}\PYGZlt{} \PYGZdq{}, direction: \PYGZdq{} \PYGZlt{}\PYGZlt{} tap.direction()\PYGZlt{}\PYGZlt{} std::endl;}
        \PYG{k}{break}\PYG{p}{;}
      \PYG{p}{\PYGZcb{}}
      \PYG{k}{case} \PYG{n}{Gesture}\PYG{o}{::}\PYG{n+nl}{TYPE\PYGZus{}SCREEN\PYGZus{}TAP}\PYG{p}{:}
      \PYG{p}{\PYGZob{}}
        \PYG{n}{ScreenTapGesture} \PYG{n}{screentap} \PYG{o}{=} \PYG{n}{gesture}\PYG{p}{;}
\PYG{c+c1}{//////////////////////////////////////////        std::cout \PYGZlt{}\PYGZlt{} std::string(2, \PYGZsq{} \PYGZsq{})}
\PYG{c+c1}{//////////////////////////////////////////          \PYGZlt{}\PYGZlt{} \PYGZdq{}Screen Tap id: \PYGZdq{} \PYGZlt{}\PYGZlt{} gesture.id()}
\PYG{c+c1}{//////////////////////////////////////////          \PYGZlt{}\PYGZlt{} \PYGZdq{}, state: \PYGZdq{} \PYGZlt{}\PYGZlt{} stateNames[gesture.state()]}
\PYG{c+c1}{//////////////////////////////////////////          \PYGZlt{}\PYGZlt{} \PYGZdq{}, position: \PYGZdq{} \PYGZlt{}\PYGZlt{} screentap.position()}
\PYG{c+c1}{//////////////////////////////////////////          \PYGZlt{}\PYGZlt{} \PYGZdq{}, direction: \PYGZdq{} \PYGZlt{}\PYGZlt{} screentap.direction()\PYGZlt{}\PYGZlt{} std::endl;}
        \PYG{k}{break}\PYG{p}{;}
      \PYG{p}{\PYGZcb{}}
      \PYG{k}{default}\PYG{o}{:}
\PYG{c+c1}{//////////////////////////////////////////        std::cout \PYGZlt{}\PYGZlt{} std::string(2, \PYGZsq{} \PYGZsq{})  \PYGZlt{}\PYGZlt{} \PYGZdq{}Unknown gesture type.\PYGZdq{} \PYGZlt{}\PYGZlt{} std::endl;}
        \PYG{k}{break}\PYG{p}{;}
    \PYG{p}{\PYGZcb{}}
  \PYG{p}{\PYGZcb{}}

  \PYG{k}{if} \PYG{p}{(}\PYG{o}{!}\PYG{n}{frame}\PYG{p}{.}\PYG{n}{hands}\PYG{p}{().}\PYG{n}{isEmpty}\PYG{p}{()} \PYG{o}{||} \PYG{o}{!}\PYG{n}{gestures}\PYG{p}{.}\PYG{n}{isEmpty}\PYG{p}{())} \PYG{p}{\PYGZob{}}
\PYG{c+c1}{//////////////////////////////////////////    std::cout \PYGZlt{}\PYGZlt{} std::endl;}
  \PYG{p}{\PYGZcb{}}

\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void} \PYG{n}{SampleListener}\PYG{o}{::}\PYG{n}{onFocusGained}\PYG{p}{(}\PYG{k}{const} \PYG{n}{Controller}\PYG{o}{\PYGZam{}} \PYG{n}{controller}\PYG{p}{)} \PYG{p}{\PYGZob{}}
\PYG{c+c1}{//////////////////////////////////////////  std::cout \PYGZlt{}\PYGZlt{} \PYGZdq{}Focus Gained\PYGZdq{} \PYGZlt{}\PYGZlt{} std::endl;}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void} \PYG{n}{SampleListener}\PYG{o}{::}\PYG{n}{onFocusLost}\PYG{p}{(}\PYG{k}{const} \PYG{n}{Controller}\PYG{o}{\PYGZam{}} \PYG{n}{controller}\PYG{p}{)} \PYG{p}{\PYGZob{}}
\PYG{c+c1}{//////////////////////////////////////////  std::cout \PYGZlt{}\PYGZlt{} \PYGZdq{}Focus Lost\PYGZdq{} \PYGZlt{}\PYGZlt{} std::endl;}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void} \PYG{n}{SampleListener}\PYG{o}{::}\PYG{n}{onDeviceChange}\PYG{p}{(}\PYG{k}{const} \PYG{n}{Controller}\PYG{o}{\PYGZam{}} \PYG{n}{controller}\PYG{p}{)} \PYG{p}{\PYGZob{}}
\PYG{c+c1}{//////////////////////////////////////////  std::cout \PYGZlt{}\PYGZlt{} \PYGZdq{}Device Changed\PYGZdq{} \PYGZlt{}\PYGZlt{} std::endl;}
  \PYG{k}{const} \PYG{n}{DeviceList} \PYG{n}{devices} \PYG{o}{=} \PYG{n}{controller}\PYG{p}{.}\PYG{n}{devices}\PYG{p}{();}

  \PYG{k}{for} \PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{i} \PYG{o}{=} \PYG{l+m+mi}{0}\PYG{p}{;} \PYG{n}{i} \PYG{o}{\PYGZlt{}} \PYG{n}{devices}\PYG{p}{.}\PYG{n}{count}\PYG{p}{();} \PYG{o}{++}\PYG{n}{i}\PYG{p}{)} \PYG{p}{\PYGZob{}}
\PYG{c+c1}{//////////////////////////////////////////    std::cout \PYGZlt{}\PYGZlt{} \PYGZdq{}id: \PYGZdq{} \PYGZlt{}\PYGZlt{} devices[i].toString() \PYGZlt{}\PYGZlt{} std::endl;}
\PYG{c+c1}{//////////////////////////////////////////    std::cout \PYGZlt{}\PYGZlt{} \PYGZdq{}  isStreaming: \PYGZdq{} \PYGZlt{}\PYGZlt{} (devices[i].isStreaming() ? \PYGZdq{}true\PYGZdq{} : \PYGZdq{}false\PYGZdq{}) \PYGZlt{}\PYGZlt{} std::endl;}
  \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void} \PYG{n}{SampleListener}\PYG{o}{::}\PYG{n}{onServiceConnect}\PYG{p}{(}\PYG{k}{const} \PYG{n}{Controller}\PYG{o}{\PYGZam{}} \PYG{n}{controller}\PYG{p}{)} \PYG{p}{\PYGZob{}}
\PYG{c+c1}{//////////////////////////////////////////  std::cout \PYGZlt{}\PYGZlt{} \PYGZdq{}Service Connected\PYGZdq{} \PYGZlt{}\PYGZlt{} std::endl;}
\PYG{p}{\PYGZcb{}}

\PYG{k+kt}{void} \PYG{n}{SampleListener}\PYG{o}{::}\PYG{n}{onServiceDisconnect}\PYG{p}{(}\PYG{k}{const} \PYG{n}{Controller}\PYG{o}{\PYGZam{}} \PYG{n}{controller}\PYG{p}{)} \PYG{p}{\PYGZob{}}
\PYG{c+c1}{//////////////////////////////////////////  std::cout \PYGZlt{}\PYGZlt{} \PYGZdq{}Service Disconnected\PYGZdq{} \PYGZlt{}\PYGZlt{} std::endl;}
\PYG{p}{\PYGZcb{}}

\PYG{c+cm}{/*}
\PYG{c+cm}{ *@brief funcion principal, inicializa el controlados y el listener y mantiene el proceso hasta que se digite enter}
\PYG{c+cm}{ */}

\PYG{k+kt}{int} \PYG{n}{main}\PYG{p}{(}\PYG{k+kt}{int} \PYG{n}{argc}\PYG{p}{,} \PYG{k+kt}{char}\PYG{o}{**} \PYG{n}{argv}\PYG{p}{)} \PYG{p}{\PYGZob{}}
  \PYG{n}{printf}\PYG{p}{(}\PYG{n}{ANSI\PYGZus{}COLOR\PYGZus{}RESET} \PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{);}
  \PYG{n}{printf}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}iniciando}\PYG{l+s+se}{\PYGZbs{}n}\PYG{l+s}{\PYGZdq{}}\PYG{p}{);}
  \PYG{n}{EscribirCadena}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{,}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{l+s}{\PYGZdq{}FrameID\PYGZdq{}}\PYG{p}{);}
  \PYG{n}{EscribirCadena}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{,}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{l+s}{\PYGZdq{}CtdManos\PYGZdq{}}\PYG{p}{);}
  \PYG{n}{EscribirCadena}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{,}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{l+s}{\PYGZdq{}CtdDedos\PYGZdq{}}\PYG{p}{);}
  \PYG{n}{EscribirCadena}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{,}\PYG{l+m+mi}{0}\PYG{p}{,}\PYG{l+s}{\PYGZdq{}ListaArchivos\PYGZdq{}}\PYG{p}{);}
  \PYG{c+c1}{// Create a sample listener and controller}
  \PYG{n}{SampleListener} \PYG{n}{listener}\PYG{p}{;}
  \PYG{n}{Controller} \PYG{n}{controller}\PYG{p}{;}
  \PYG{c+c1}{// Have the sample listener receive events from the controller}
  \PYG{n}{controller}\PYG{p}{.}\PYG{n}{addListener}\PYG{p}{(}\PYG{n}{listener}\PYG{p}{);}
  
  \PYG{k}{if} \PYG{p}{(}\PYG{n}{argc} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{1} \PYG{o}{\PYGZam{}\PYGZam{}} \PYG{n}{strcmp}\PYG{p}{(}\PYG{n}{argv}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{],} \PYG{l+s}{\PYGZdq{}\PYGZhy{}\PYGZhy{}bg\PYGZdq{}}\PYG{p}{)} \PYG{o}{==} \PYG{l+m+mi}{0}\PYG{p}{)}
    \PYG{n}{controller}\PYG{p}{.}\PYG{n}{setPolicy}\PYG{p}{(}\PYG{n}{Leap}\PYG{o}{::}\PYG{n}{Controller}\PYG{o}{::}\PYG{n}{POLICY\PYGZus{}BACKGROUND\PYGZus{}FRAMES}\PYG{p}{);}

  \PYG{c+c1}{// Keep this process running until Enter is pressed}
  \PYG{n}{std}\PYG{o}{::}\PYG{n}{cout} \PYG{o}{\PYGZlt{}\PYGZlt{}} \PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{;}
  \PYG{n}{std}\PYG{o}{::}\PYG{n}{cin}\PYG{p}{.}\PYG{n}{get}\PYG{p}{();}

  \PYG{c+c1}{// Remove the sample listener when done}
  \PYG{n}{controller}\PYG{p}{.}\PYG{n}{removeListener}\PYG{p}{(}\PYG{n}{listener}\PYG{p}{);}
  
  \PYG{k}{return} \PYG{l+m+mi}{0}\PYG{p}{;}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
